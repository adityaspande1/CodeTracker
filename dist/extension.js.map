{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://codetracker/./src/extension.ts","webpack://codetracker/./src/services/githubAuth.ts","webpack://codetracker/./src/services/pushLog.ts","webpack://codetracker/./src/services/workSpaceTracker.ts","webpack://codetracker/./src/services/workSpaceTrackerService.ts","webpack://codetracker/./src/views/sideBar.ts","webpack://codetracker/external commonjs \"vscode\"","webpack://codetracker/external node-commonjs \"events\"","webpack://codetracker/external node-commonjs \"path\"","webpack://codetracker/./node_modules/fast-content-type-parse/index.js","webpack://codetracker/./node_modules/universal-user-agent/index.js","webpack://codetracker/./node_modules/before-after-hook/lib/register.js","webpack://codetracker/./node_modules/before-after-hook/lib/add.js","webpack://codetracker/./node_modules/before-after-hook/lib/remove.js","webpack://codetracker/./node_modules/before-after-hook/index.js","webpack://codetracker/./node_modules/@octokit/endpoint/dist-bundle/index.js","webpack://codetracker/./node_modules/@octokit/request-error/dist-src/index.js","webpack://codetracker/./node_modules/@octokit/request/dist-bundle/index.js","webpack://codetracker/./node_modules/@octokit/graphql/dist-bundle/index.js","webpack://codetracker/./node_modules/@octokit/auth-token/dist-bundle/index.js","webpack://codetracker/./node_modules/@octokit/core/dist-src/version.js","webpack://codetracker/./node_modules/@octokit/core/dist-src/index.js","webpack://codetracker/./node_modules/@octokit/plugin-request-log/dist-src/index.js","webpack://codetracker/./node_modules/@octokit/plugin-paginate-rest/dist-bundle/index.js","webpack://codetracker/./node_modules/@octokit/plugin-request-log/dist-src/version.js","webpack://codetracker/./node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js","webpack://codetracker/./node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js","webpack://codetracker/./node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js","webpack://codetracker/./node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js","webpack://codetracker/./node_modules/@octokit/rest/dist-src/version.js","webpack://codetracker/./node_modules/@octokit/rest/dist-src/index.js","webpack://codetracker/webpack/bootstrap","webpack://codetracker/webpack/runtime/define property getters","webpack://codetracker/webpack/runtime/hasOwnProperty shorthand","webpack://codetracker/webpack/runtime/make namespace object","webpack://codetracker/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport { registerGitHubAuthCommand } from './commands/githubAuthCommand';\nimport { initializeWorkSpaceTracking } from './services/workSpaceTrackerService';\nimport {pushLogToGitHub} from './services/pushLog';\nimport { WorkSpaceTracker } from './services/workSpaceTracker';\nimport { authentication, AuthenticationSession } from 'vscode'; \nimport { registerCodeTrackerWebViewProvider } from './views/sideBar';\nimport { githubAuthenticate } from './services/githubAuth';\nexport function activate(context: vscode.ExtensionContext) {\n    const outputChannel = vscode.window.createOutputChannel('CodeTracker');\n    console.log('CodeTracker extension is now active!');\n\n    const webViewProvider = registerCodeTrackerWebViewProvider(context, outputChannel);\n    \n\n\n   const disposable1 = vscode.commands.registerCommand('codetracker.authenticate', async () => {\n           const userResponse = await vscode.window.showInformationMessage(\n               'Allow CodeTracker to Authenticate with GitHub',\n               'Yes',\n               'No'\n           );\n   \n           if (userResponse === 'Yes') {\n               try {\n                   const session = await githubAuthenticate();\n                   console.log('GitHub Session:', session);\n                   vscode.window.showInformationMessage('GitHub Authentication Successful !');\n                   initializeWorkSpaceTracking(outputChannel);\n               } catch (error: any) {\n                   vscode.window.showErrorMessage(`GitHub Authentication failed: ${error.message}`);\n               }\n           } else {\n               vscode.window.showInformationMessage('Authentication canceled.');\n           }\n       });\n   \n       context.subscriptions.push(disposable1);\n\n  \n    let disposable = vscode.commands.registerCommand('codetracker.pushLogToGitHub', async () => {\n        const session: AuthenticationSession | undefined = await authentication.getSession('github', ['repo'], { createIfNone: true });\n        if (!session) {\n            vscode.window.showErrorMessage('GitHub authentication failed');\n            return;\n        }\n\n      \n       const logContent=WorkSpaceTracker.getInstance(outputChannel).getTrackedChangesAsString();\n       \n        const accessToken = session.accessToken;\n        try {\n            await pushLogToGitHub(logContent, accessToken, session);\n        } catch (error: any) {\n            vscode.window.showErrorMessage(`Failed to push log: ${error.message}`);\n        }\n    });\n\n\n    context.subscriptions.push(disposable);\n\n}\n\nexport function deactivate(): void {\n    console.log('CodeTracker extension has been deactivated.');\n}\n","import { AuthenticationSession, authentication, window } from 'vscode';\n\nexport async function githubAuthenticate(): Promise<AuthenticationSession | { accessToken: string } | undefined> {\n    const session = await authentication.getSession('github', ['repo'], { createIfNone: true });\n    if (!session) {\n        window.showErrorMessage('GitHub authentication failed');\n        return;\n    }\n    window.showInformationMessage('GitHub authenticated successfully with ' + session.account.label);\n    console.log('session', session);\n\n    return session;\n}\n","import { Octokit } from \"@octokit/rest\";\nimport * as vscode from \"vscode\";\n\nexport async function pushLogToGitHub(logContent: string, accessToken: string, session: vscode.AuthenticationSession) {\n    const date = new Date();\n    const fileName = `log${date.toISOString().split('T')[0]}.txt`; \n    const repoOwner = session.account.label;\n    const repoName = \"code-tracker\"; \n    const branch = \"main\";\n\n    const octokit = new Octokit({ auth: accessToken });\n\n    try {\n        // Check if the repository exists\n        let repoCreated = false;\n        try {\n            console.log(\"Checking if repository exists...\");\n            await octokit.rest.repos.get({\n                owner: repoOwner,\n                repo: repoName,\n            });\n            console.log(`Repository \"${repoName}\" exists.`);\n        } catch (error: any) {\n            if (error.status === 404) {\n                console.log(`Repository \"${repoName}\" not found. Creating repository...`);\n     \n                await octokit.rest.repos.createForAuthenticatedUser({\n                    name: repoName,\n                    private: false,\n                    description: \"Repository for tracking logs\",\n                    auto_init: true, // Initialize here witha README.md\n                });\n                console.log(`Repository \"${repoName}\" created with a README.md.`);\n                repoCreated = true;\n            } else {\n                throw error;\n            }\n        }\n\n        console.log(\"Pushing log file...\");\n        const { data: refData } = await octokit.git.getRef({\n            owner: repoOwner,\n            repo: repoName,\n            ref: `heads/${branch}`,\n        });\n\n        const latestCommitSha = refData.object.sha;\n\n        const { data: commitData } = await octokit.git.getCommit({\n            owner: repoOwner,\n            repo: repoName,\n            commit_sha: latestCommitSha,\n        });\n\n        const latestTreeSha = commitData.tree.sha;\n\n        const { data: treeData } = await octokit.git.createTree({\n            owner: repoOwner,\n            repo: repoName,\n            base_tree: latestTreeSha,\n            tree: [\n                {\n                    path: `logs/${fileName}`,\n                    mode: \"100644\",\n                    type: \"blob\",\n                    content: logContent,\n                },\n            ],\n        });\n\n        const { data: newCommit } = await octokit.git.createCommit({\n            owner: repoOwner,\n            repo: repoName,\n            message: `Add log file: ${fileName}`,\n            tree: treeData.sha,\n            parents: [latestCommitSha],\n        });\n\n        await octokit.git.updateRef({\n            owner: repoOwner,\n            repo: repoName,\n            ref: `heads/${branch}`,\n            sha: newCommit.sha,\n        });\n\n        vscode.window.showInformationMessage(`Log file pushed successfully: ${fileName}`);\n        console.log(`Log file committed: ${fileName}`);\n    } catch (error: any) {\n        console.error(\"Error while pushing log to GitHub:\", error.message);\n        vscode.window.showErrorMessage(`Error while pushing log: ${error.message}`);\n    }\n}\n","import * as vscode from 'vscode';\nimport { EventEmitter } from 'events';\nimport * as path from 'path';\n\nexport interface FileChange {\n  uri: vscode.Uri;\n  type: 'created' | 'deleted' | 'modified';\n  time: Date;\n}\n\nexport class WorkSpaceTracker extends EventEmitter {\n  private static instance: WorkSpaceTracker | null = null;\n  private watcher: vscode.FileSystemWatcher | null = null;\n  private ignorePatterns: string[] = [];\n  private workSpaceChanges: Map<string, FileChange> = new Map();\n  private logChannel: vscode.OutputChannel;\n\n  private constructor(logChannel: vscode.OutputChannel) {\n    super();\n    this.logChannel = logChannel;\n    this.setupWatcher();\n  }\n\n  public static getInstance(logChannel: vscode.OutputChannel): WorkSpaceTracker {\n    if (!WorkSpaceTracker.instance) {\n      WorkSpaceTracker.instance = new WorkSpaceTracker(logChannel);\n    }\n    return WorkSpaceTracker.instance;\n  }\n\n  private setupWatcher(): void {\n    this.logChannel.appendLine('FileTracker: Initializing file watcher...');\n    console.log('FileTracker: Initializing file watcher...');\n\n    this.ignorePatterns = vscode.workspace\n      .getConfiguration('filetracker')\n      .get<string[]>('ignore') || [];\n\n    this.watcher = vscode.workspace.createFileSystemWatcher(\n      '**/*',\n      false, // This will include Creation\n      false, // This includes Change\n      false // Include deletion\n    );\n\n    this.watcher.onDidCreate((uri) => this.trackChange(uri, 'created'));\n    this.watcher.onDidChange((uri) => this.trackChange(uri, 'modified'));\n    this.watcher.onDidDelete((uri) => this.trackChange(uri, 'deleted'));\n\n    this.logChannel.appendLine('FileTracker: File watcher initialized.');\n    console.log('FileTracker: File watcher initialized.');\n  }\n\n  private trackChange(uri: vscode.Uri, type: 'created' | 'modified' | 'deleted'): void {\n    const relativePath = vscode.workspace.asRelativePath(uri);\n\n    const isIgnored = this.ignorePatterns.some((pattern) =>\n      new RegExp(pattern).test(relativePath)\n    );\n\n    if (isIgnored) {\n      this.logChannel.appendLine(`FileTracker: Ignored file ${relativePath}.`);\n      console.log(`FileTracker: Ignored file ${relativePath}.`);\n      return;\n    }\n\n    const validExtensions = [\n      'js', 'ts', 'html', 'css', 'json', 'md', 'java', 'py', 'c', 'cpp', \n      'jsx', 'tsx', 'go', 'kt', 'rb', 'yml', 'yaml', 'xml'\n    ];\n    const extension = path.extname(uri.fsPath).substring(1);\n\n    if (validExtensions.includes(extension)) {\n      const change: FileChange = {\n        uri,\n        type,\n        time: new Date(),\n      };\n\n      this.workSpaceChanges.set(uri.fsPath, change);\n      this.emit('fileChange', change);\n\n      this.logChannel.appendLine(\n        `FileTracker: ${type.toUpperCase()} detected in ${relativePath}`\n      );\n      console.log(`FileTracker: ${type.toUpperCase()} detected in ${relativePath}`);\n    }\n  }\n\n  public getTrackedChanges(): FileChange[] {\n    return Array.from(this.workSpaceChanges.values());\n  }\n\n  public clearChanges(): void {\n    this.workSpaceChanges.clear();\n    this.logChannel.appendLine('FileTracker: Cleared all tracked changes.');\n    console.log('FileTracker: Cleared all tracked changes.');\n  }\n\n  public updateIgnorePatterns(patterns: string[]): void {\n    this.ignorePatterns = patterns;\n    this.logChannel.appendLine(\n      `FileTracker: Updated ignore patterns to: ${patterns.join(', ')}`\n    );\n    console.log(`FileTracker: Updated ignore patterns to: ${patterns.join(', ')}`);\n  }\n\n  public getTrackedChangesAsString(): string {\n    const changes = this.getTrackedChanges();\n    return changes\n      .map(change => `[${change.time.toISOString()}] ${change.type.toUpperCase()} - ${vscode.workspace.asRelativePath(change.uri)}`)\n      .join('\\n');\n  }\n\n  public dispose(): void {\n    this.watcher?.dispose();\n    this.logChannel.appendLine('FileTracker: Disposed file watcher.');\n    console.log('FileTracker: Disposed file watcher.');\n  }\n}\n","import * as vscode from 'vscode';\nimport { WorkSpaceTracker } from './workSpaceTracker';\n\nexport function initializeWorkSpaceTracking(outputChannel: vscode.OutputChannel): void {\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n\n    if (!workspaceFolders || workspaceFolders.length === 0) {\n        vscode.window.showInformationMessage('No workspace folders found.');\n        return;\n    }\n\n    const workspaceTracker = WorkSpaceTracker.getInstance(outputChannel);\n    workspaceTracker.getTrackedChanges();\n\n    vscode.window.showInformationMessage(\n        `Workspace folders initialized. Tracking changes for: ${workspaceFolders\n            .map(folder => folder.uri.fsPath)\n            .join(', ')}`\n    );\n}\n","import {\n    CancellationToken,\n    commands,\n    ExtensionContext,\n    Uri,\n    Webview,\n    WebviewView,\n    OutputChannel,\n    WebviewViewProvider,\n    WebviewViewResolveContext,\n    window,\n    AuthenticationSession,\n    authentication,\n  \n} from \"vscode\";\nimport { githubAuthenticate } from \"../services/githubAuth\";\nimport { initializeWorkSpaceTracking } from \"../services/workSpaceTrackerService\";\n\nexport function registerCodeTrackerWebViewProvider(\n    context: ExtensionContext,\n    outputChannel: OutputChannel\n): CodeTrackerWebViewProvider {\n    const provider = new CodeTrackerWebViewProvider(context.extensionUri, outputChannel);\n    context.subscriptions.push(\n        window.registerWebviewViewProvider(\"sidebarPanel\", provider)\n    );\n    return provider;\n}\n\nexport class CodeTrackerWebViewProvider implements WebviewViewProvider {\n    private _view?: WebviewView;\n\n    constructor(private readonly _extensionUri: Uri, private outputChannel: OutputChannel) {}\n\n    resolveWebviewView(\n        webviewView: WebviewView,\n        _context: WebviewViewResolveContext,\n        _token: CancellationToken\n    ) {\n        this._view = webviewView;\n\n        webviewView.webview.options = {\n            enableScripts: true,\n            localResourceRoots: [\n                Uri.joinPath(this._extensionUri, \"media\")\n            ],\n        };\n\n        webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\n\n        webviewView.webview.onDidReceiveMessage(async (message) => {\n            switch (message.type) {\n                case \"startTracking\": {\n                     \n                        await commands.executeCommand(\"codetracker.authenticate\");\n                        await commands.executeCommand(\"codetracker.trackWorkspace\");\n                        \n\n                    \n                    break;\n                }\n                case \"pushLogs\": {\n                    const session = await githubAuthenticate();\n                    if (session) {\n                        window.showInformationMessage(\"Pushing Logs to GitHub!\");\n                        await commands.executeCommand(\"codetracker.pushLogToGitHub\");\n                    }\n                    break;\n                }\n            }\n        });\n    }\n\n\n    private _getHtmlForWebview(webview: Webview): string {\n        const styleResetUri = webview.asWebviewUri(\n            Uri.joinPath(this._extensionUri, \"media\", \"css\", \"reset.css\")\n        );\n        const styleVSCodeUri = webview.asWebviewUri(\n            Uri.joinPath(this._extensionUri, \"media\", \"css\", \"vscode.css\")\n        );\n        const scriptUri = webview.asWebviewUri(\n            Uri.joinPath(this._extensionUri, \"media\", \"js\", \"sidebar.js\")\n        );\n\n        return `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n            <head>\n              <meta charset=\"UTF-8\">\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n              <meta http-equiv=\"Content-Security-Policy\" content=\"\n                default-src 'none';\n                img-src ${webview.cspSource} https:;\n                script-src 'unsafe-inline' ${webview.cspSource};\n                style-src ${webview.cspSource} 'unsafe-inline';\">\n              <link href=\"${styleResetUri}\" rel=\"stylesheet\">\n              <link href=\"${styleVSCodeUri}\" rel=\"stylesheet\">\n           </head>\n           <body>\n              <div>Action buttons:</div>\n              <button type=\"button\" class=\"start-btn\" onclick=\"startTracking()\">Start Tracking</button>\n              <button type=\"button\" class=\"push-btn\" onclick=\"pushLogs()\">Push Logs</button>\n              <div id=\"tree-container\"></div>\n              <script>\n                const vscode = acquireVsCodeApi();\n                function startTracking() {\n                    vscode.postMessage({ type: 'startTracking' });\n                }\n                function pushLogs() {\n                    vscode.postMessage({ type: 'pushLogs' });\n                }\n              </script>\n           </body>\n        </html>`;\n    }\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"events\");","module.exports = require(\"path\");","'use strict'\n\nconst NullObject = function NullObject () { }\nNullObject.prototype = Object.create(null)\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nconst paramRE = /; *([!#$%&'*+.^\\w`|~-]+)=(\"(?:[\\v\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\v\\u0020-\\u00ff])*\"|[!#$%&'*+.^\\w`|~-]+) */gu\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nconst quotedPairRE = /\\\\([\\v\\u0020-\\u00ff])/gu\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nconst mediaTypeRE = /^[!#$%&'*+.^\\w|~-]+\\/[!#$%&'*+.^\\w|~-]+$/u\n\n// default ContentType to prevent repeated object creation\nconst defaultContentType = { type: '', parameters: new NullObject() }\nObject.freeze(defaultContentType.parameters)\nObject.freeze(defaultContentType)\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} header\n * @return {Object}\n * @public\n */\n\nfunction parse (header) {\n  if (typeof header !== 'string') {\n    throw new TypeError('argument header is required and must be a string')\n  }\n\n  let index = header.indexOf(';')\n  const type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (mediaTypeRE.test(type) === false) {\n    throw new TypeError('invalid media type')\n  }\n\n  const result = {\n    type: type.toLowerCase(),\n    parameters: new NullObject()\n  }\n\n  // parse parameters\n  if (index === -1) {\n    return result\n  }\n\n  let key\n  let match\n  let value\n\n  paramRE.lastIndex = index\n\n  while ((match = paramRE.exec(header))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .slice(1, value.length - 1)\n\n      quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'))\n    }\n\n    result.parameters[key] = value\n  }\n\n  if (index !== header.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return result\n}\n\nfunction safeParse (header) {\n  if (typeof header !== 'string') {\n    return defaultContentType\n  }\n\n  let index = header.indexOf(';')\n  const type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (mediaTypeRE.test(type) === false) {\n    return defaultContentType\n  }\n\n  const result = {\n    type: type.toLowerCase(),\n    parameters: new NullObject()\n  }\n\n  // parse parameters\n  if (index === -1) {\n    return result\n  }\n\n  let key\n  let match\n  let value\n\n  paramRE.lastIndex = index\n\n  while ((match = paramRE.exec(header))) {\n    if (match.index !== index) {\n      return defaultContentType\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .slice(1, value.length - 1)\n\n      quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'))\n    }\n\n    result.parameters[key] = value\n  }\n\n  if (index !== header.length) {\n    return defaultContentType\n  }\n\n  return result\n}\n\nmodule.exports.default = { parse, safeParse }\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.defaultContentType = defaultContentType\n","export function getUserAgent() {\n  if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n    return navigator.userAgent;\n  }\n\n  if (typeof process === \"object\" && process.version !== undefined) {\n    return `Node.js/${process.version.substr(1)} (${process.platform}; ${\n      process.arch\n    })`;\n  }\n\n  return \"<environment undetectable>\";\n}\n","// @ts-check\n\nexport function register(state, name, method, options) {\n  if (typeof method !== \"function\") {\n    throw new Error(\"method for before hook must be a function\");\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce((callback, name) => {\n      return register.bind(null, state, name, callback, options);\n    }, method)();\n  }\n\n  return Promise.resolve().then(() => {\n    if (!state.registry[name]) {\n      return method(options);\n    }\n\n    return state.registry[name].reduce((method, registered) => {\n      return registered.hook.bind(null, method, options);\n    }, method)();\n  });\n}\n","// @ts-check\n\nexport function addHook(state, kind, name, hook) {\n  const orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = (method, options) => {\n      let result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then((result_) => {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(() => {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch((error) => {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n","// @ts-check\n\nexport function removeHook(state, name, method) {\n  if (!state.registry[name]) {\n    return;\n  }\n\n  const index = state.registry[name]\n    .map((registered) => {\n      return registered.orig;\n    })\n    .indexOf(method);\n\n  if (index === -1) {\n    return;\n  }\n\n  state.registry[name].splice(index, 1);\n}\n","// @ts-check\n\nimport { register } from \"./lib/register.js\";\nimport { addHook } from \"./lib/add.js\";\nimport { removeHook } from \"./lib/remove.js\";\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nconst bind = Function.bind;\nconst bindable = bind.bind(bind);\n\nfunction bindApi(hook, state, name) {\n  const removeHookRef = bindable(removeHook, null).apply(\n    null,\n    name ? [state, name] : [state]\n  );\n  hook.api = { remove: removeHookRef };\n  hook.remove = removeHookRef;\n  [\"before\", \"error\", \"after\", \"wrap\"].forEach((kind) => {\n    const args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\n\nfunction Singular() {\n  const singularHookName = Symbol(\"Singular\");\n  const singularHookState = {\n    registry: {},\n  };\n  const singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\n\nfunction Collection() {\n  const state = {\n    registry: {},\n  };\n\n  const hook = register.bind(null, state);\n  bindApi(hook, state);\n\n  return hook;\n}\n\nexport default { Singular, Collection };\n","// pkg/dist-src/defaults.js\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/defaults.js\nvar userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;\nvar DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\"\n  }\n};\n\n// pkg/dist-src/util/lowercase-keys.js\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\n// pkg/dist-src/util/is-plain-object.js\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) return false;\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) return true;\n  const Ctor = Object.prototype.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor === \"function\" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n}\n\n// pkg/dist-src/util/merge-deep.js\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach((key) => {\n    if (isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, { [key]: options[key] });\n      else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, { [key]: options[key] });\n    }\n  });\n  return result;\n}\n\n// pkg/dist-src/util/remove-undefined-properties.js\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === void 0) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\n// pkg/dist-src/merge.js\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? { method, url } : { url: method }, options);\n  } else {\n    options = Object.assign({}, route);\n  }\n  options.headers = lowercaseKeys(options.headers);\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options);\n  if (options.url === \"/graphql\") {\n    if (defaults && defaults.mediaType.previews?.length) {\n      mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(\n        (preview) => !mergedOptions.mediaType.previews.includes(preview)\n      ).concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = (mergedOptions.mediaType.previews || []).map((preview) => preview.replace(/-preview/, \"\"));\n  }\n  return mergedOptions;\n}\n\n// pkg/dist-src/util/add-query-parameters.js\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n  if (names.length === 0) {\n    return url;\n  }\n  return url + separator + names.map((name) => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\n// pkg/dist-src/util/extract-url-variable-names.js\nvar urlVariableRegex = /\\{[^}]+\\}/g;\nfunction removeNonChars(variableName) {\n  return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n  if (!matches) {\n    return [];\n  }\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\n// pkg/dist-src/util/omit.js\nfunction omit(object, keysToOmit) {\n  const result = { __proto__: null };\n  for (const key of Object.keys(object)) {\n    if (keysToOmit.indexOf(key) === -1) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\n// pkg/dist-src/util/url-template.js\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n    return part;\n  }).join(\"\");\n}\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\nfunction isDefined(value) {\n  return value !== void 0 && value !== null;\n}\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key], result = [];\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n      result.push(\n        encodeValue(operator, value, isKeyOperator(operator) ? key : \"\")\n      );\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            result.push(\n              encodeValue(operator, value2, isKeyOperator(operator) ? key : \"\")\n            );\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            tmp.push(encodeValue(operator, value2));\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n  return result;\n}\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  template = template.replace(\n    /\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g,\n    function(_, expression, literal) {\n      if (expression) {\n        let operator = \"\";\n        const values = [];\n        if (operators.indexOf(expression.charAt(0)) !== -1) {\n          operator = expression.charAt(0);\n          expression = expression.substr(1);\n        }\n        expression.split(/,/g).forEach(function(variable) {\n          var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n        });\n        if (operator && operator !== \"+\") {\n          var separator = \",\";\n          if (operator === \"?\") {\n            separator = \"&\";\n          } else if (operator !== \"#\") {\n            separator = operator;\n          }\n          return (values.length !== 0 ? operator : \"\") + values.join(separator);\n        } else {\n          return values.join(\",\");\n        }\n      } else {\n        return encodeReserved(literal);\n      }\n    }\n  );\n  if (template === \"/\") {\n    return template;\n  } else {\n    return template.replace(/\\/$/, \"\");\n  }\n}\n\n// pkg/dist-src/parse.js\nfunction parse(options) {\n  let method = options.method.toUpperCase();\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"mediaType\"\n  ]);\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      headers.accept = headers.accept.split(/,/).map(\n        (format) => format.replace(\n          /application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/,\n          `application/vnd$1$2.${options.mediaType.format}`\n        )\n      ).join(\",\");\n    }\n    if (url.endsWith(\"/graphql\")) {\n      if (options.mediaType.previews?.length) {\n        const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {\n          const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n          return `application/vnd.github.${preview}-preview${format}`;\n        }).join(\",\");\n      }\n    }\n  }\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      }\n    }\n  }\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  }\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  }\n  return Object.assign(\n    { method, url, headers },\n    typeof body !== \"undefined\" ? { body } : null,\n    options.request ? { request: options.request } : null\n  );\n}\n\n// pkg/dist-src/endpoint-with-defaults.js\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS2 = merge(oldDefaults, newDefaults);\n  const endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);\n  return Object.assign(endpoint2, {\n    DEFAULTS: DEFAULTS2,\n    defaults: withDefaults.bind(null, DEFAULTS2),\n    merge: merge.bind(null, DEFAULTS2),\n    parse\n  });\n}\n\n// pkg/dist-src/index.js\nvar endpoint = withDefaults(null, DEFAULTS);\nexport {\n  endpoint\n};\n","class RequestError extends Error {\n  name;\n  /**\n   * http status code\n   */\n  status;\n  /**\n   * Request options that lead to the error.\n   */\n  request;\n  /**\n   * Response object if a response was received\n   */\n  response;\n  constructor(message, statusCode, options) {\n    super(message);\n    this.name = \"HttpError\";\n    this.status = Number.parseInt(statusCode);\n    if (Number.isNaN(this.status)) {\n      this.status = 0;\n    }\n    if (\"response\" in options) {\n      this.response = options.response;\n    }\n    const requestCopy = Object.assign({}, options.request);\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(\n          / .*$/,\n          \" [REDACTED]\"\n        )\n      });\n    }\n    requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n  }\n}\nexport {\n  RequestError\n};\n","// pkg/dist-src/index.js\nimport { endpoint } from \"@octokit/endpoint\";\n\n// pkg/dist-src/defaults.js\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/defaults.js\nvar defaults_default = {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`\n  }\n};\n\n// pkg/dist-src/fetch-wrapper.js\nimport { safeParse } from \"fast-content-type-parse\";\n\n// pkg/dist-src/is-plain-object.js\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) return false;\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) return true;\n  const Ctor = Object.prototype.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor === \"function\" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n}\n\n// pkg/dist-src/fetch-wrapper.js\nimport { RequestError } from \"@octokit/request-error\";\nasync function fetchWrapper(requestOptions) {\n  const fetch = requestOptions.request?.fetch || globalThis.fetch;\n  if (!fetch) {\n    throw new Error(\n      \"fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing\"\n    );\n  }\n  const log = requestOptions.request?.log || console;\n  const parseSuccessResponseBody = requestOptions.request?.parseSuccessResponseBody !== false;\n  const body = isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body) ? JSON.stringify(requestOptions.body) : requestOptions.body;\n  const requestHeaders = Object.fromEntries(\n    Object.entries(requestOptions.headers).map(([name, value]) => [\n      name,\n      String(value)\n    ])\n  );\n  let fetchResponse;\n  try {\n    fetchResponse = await fetch(requestOptions.url, {\n      method: requestOptions.method,\n      body,\n      redirect: requestOptions.request?.redirect,\n      headers: requestHeaders,\n      signal: requestOptions.request?.signal,\n      // duplex must be set if request.body is ReadableStream or Async Iterables.\n      // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.\n      ...requestOptions.body && { duplex: \"half\" }\n    });\n  } catch (error) {\n    let message = \"Unknown Error\";\n    if (error instanceof Error) {\n      if (error.name === \"AbortError\") {\n        error.status = 500;\n        throw error;\n      }\n      message = error.message;\n      if (error.name === \"TypeError\" && \"cause\" in error) {\n        if (error.cause instanceof Error) {\n          message = error.cause.message;\n        } else if (typeof error.cause === \"string\") {\n          message = error.cause;\n        }\n      }\n    }\n    const requestError = new RequestError(message, 500, {\n      request: requestOptions\n    });\n    requestError.cause = error;\n    throw requestError;\n  }\n  const status = fetchResponse.status;\n  const url = fetchResponse.url;\n  const responseHeaders = {};\n  for (const [key, value] of fetchResponse.headers) {\n    responseHeaders[key] = value;\n  }\n  const octokitResponse = {\n    url,\n    status,\n    headers: responseHeaders,\n    data: \"\"\n  };\n  if (\"deprecation\" in responseHeaders) {\n    const matches = responseHeaders.link && responseHeaders.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n    const deprecationLink = matches && matches.pop();\n    log.warn(\n      `[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${responseHeaders.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`\n    );\n  }\n  if (status === 204 || status === 205) {\n    return octokitResponse;\n  }\n  if (requestOptions.method === \"HEAD\") {\n    if (status < 400) {\n      return octokitResponse;\n    }\n    throw new RequestError(fetchResponse.statusText, status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  if (status === 304) {\n    octokitResponse.data = await getResponseData(fetchResponse);\n    throw new RequestError(\"Not modified\", status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  if (status >= 400) {\n    octokitResponse.data = await getResponseData(fetchResponse);\n    throw new RequestError(toErrorMessage(octokitResponse.data), status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  octokitResponse.data = parseSuccessResponseBody ? await getResponseData(fetchResponse) : fetchResponse.body;\n  return octokitResponse;\n}\nasync function getResponseData(response) {\n  const contentType = response.headers.get(\"content-type\");\n  if (!contentType) {\n    return response.text().catch(() => \"\");\n  }\n  const mimetype = safeParse(contentType);\n  if (mimetype.type === \"application/json\") {\n    let text = \"\";\n    try {\n      text = await response.text();\n      return JSON.parse(text);\n    } catch (err) {\n      return text;\n    }\n  } else if (mimetype.type.startsWith(\"text/\") || mimetype.parameters.charset?.toLowerCase() === \"utf-8\") {\n    return response.text().catch(() => \"\");\n  } else {\n    return response.arrayBuffer().catch(() => new ArrayBuffer(0));\n  }\n}\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\") {\n    return data;\n  }\n  if (data instanceof ArrayBuffer) {\n    return \"Unknown error\";\n  }\n  if (\"message\" in data) {\n    const suffix = \"documentation_url\" in data ? ` - ${data.documentation_url}` : \"\";\n    return Array.isArray(data.errors) ? `${data.message}: ${data.errors.map((v) => JSON.stringify(v)).join(\", \")}${suffix}` : `${data.message}${suffix}`;\n  }\n  return `Unknown error: ${JSON.stringify(data)}`;\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint2 = oldEndpoint.defaults(newDefaults);\n  const newApi = function(route, parameters) {\n    const endpointOptions = endpoint2.merge(route, parameters);\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint2.parse(endpointOptions));\n    }\n    const request2 = (route2, parameters2) => {\n      return fetchWrapper(\n        endpoint2.parse(endpoint2.merge(route2, parameters2))\n      );\n    };\n    Object.assign(request2, {\n      endpoint: endpoint2,\n      defaults: withDefaults.bind(null, endpoint2)\n    });\n    return endpointOptions.request.hook(request2, endpointOptions);\n  };\n  return Object.assign(newApi, {\n    endpoint: endpoint2,\n    defaults: withDefaults.bind(null, endpoint2)\n  });\n}\n\n// pkg/dist-src/index.js\nvar request = withDefaults(endpoint, defaults_default);\nexport {\n  request\n};\n","// pkg/dist-src/index.js\nimport { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/with-defaults.js\nimport { request as Request2 } from \"@octokit/request\";\n\n// pkg/dist-src/graphql.js\nimport { request as Request } from \"@octokit/request\";\n\n// pkg/dist-src/error.js\nfunction _buildMessageForResponseErrors(data) {\n  return `Request failed due to following response errors:\n` + data.errors.map((e) => ` - ${e.message}`).join(\"\\n\");\n}\nvar GraphqlResponseError = class extends Error {\n  constructor(request2, headers, response) {\n    super(_buildMessageForResponseErrors(response));\n    this.request = request2;\n    this.headers = headers;\n    this.response = response;\n    this.errors = response.errors;\n    this.data = response.data;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n  name = \"GraphqlResponseError\";\n  errors;\n  data;\n};\n\n// pkg/dist-src/graphql.js\nvar NON_VARIABLE_OPTIONS = [\n  \"method\",\n  \"baseUrl\",\n  \"url\",\n  \"headers\",\n  \"request\",\n  \"query\",\n  \"mediaType\"\n];\nvar FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nvar GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request2, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(\n        new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`)\n      );\n    }\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(\n        new Error(\n          `[@octokit/graphql] \"${key}\" cannot be used as variable name`\n        )\n      );\n    }\n  }\n  const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n  const requestOptions = Object.keys(\n    parsedOptions\n  ).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n    if (!result.variables) {\n      result.variables = {};\n    }\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {});\n  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n  return request2(requestOptions).then((response) => {\n    if (response.data.errors) {\n      const headers = {};\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n      throw new GraphqlResponseError(\n        requestOptions,\n        headers,\n        response.data\n      );\n    }\n    return response.data.data;\n  });\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(request2, newDefaults) {\n  const newRequest = request2.defaults(newDefaults);\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: newRequest.endpoint\n  });\n}\n\n// pkg/dist-src/index.js\nvar graphql2 = withDefaults(request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\nexport {\n  GraphqlResponseError,\n  graphql2 as graphql,\n  withCustomRequest\n};\n","// pkg/dist-src/auth.js\nvar REGEX_IS_INSTALLATION_LEGACY = /^v1\\./;\nvar REGEX_IS_INSTALLATION = /^ghs_/;\nvar REGEX_IS_USER_TO_SERVER = /^ghu_/;\nasync function auth(token) {\n  const isApp = token.split(/\\./).length === 3;\n  const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) || REGEX_IS_INSTALLATION.test(token);\n  const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);\n  const tokenType = isApp ? \"app\" : isInstallation ? \"installation\" : isUserToServer ? \"user-to-server\" : \"oauth\";\n  return {\n    type: \"token\",\n    token,\n    tokenType\n  };\n}\n\n// pkg/dist-src/with-authorization-prefix.js\nfunction withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n  return `token ${token}`;\n}\n\n// pkg/dist-src/hook.js\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(\n    route,\n    parameters\n  );\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\n\n// pkg/dist-src/index.js\nvar createTokenAuth = function createTokenAuth2(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n  if (typeof token !== \"string\") {\n    throw new Error(\n      \"[@octokit/auth-token] Token passed to createTokenAuth is not a string\"\n    );\n  }\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\nexport {\n  createTokenAuth\n};\n","const VERSION = \"6.1.3\";\nexport {\n  VERSION\n};\n","import { getUserAgent } from \"universal-user-agent\";\nimport Hook from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\nimport { VERSION } from \"./version.js\";\nconst noop = () => {\n};\nconst consoleWarn = console.warn.bind(console);\nconst consoleError = console.error.bind(console);\nconst userAgentTrail = `octokit-core.js/${VERSION} ${getUserAgent()}`;\nclass Octokit {\n  static VERSION = VERSION;\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n        super(\n          Object.assign(\n            {},\n            defaults,\n            options,\n            options.userAgent && defaults.userAgent ? {\n              userAgent: `${options.userAgent} ${defaults.userAgent}`\n            } : null\n          )\n        );\n      }\n    };\n    return OctokitWithDefaults;\n  }\n  static plugins = [];\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n  static plugin(...newPlugins) {\n    const currentPlugins = this.plugins;\n    const NewOctokit = class extends this {\n      static plugins = currentPlugins.concat(\n        newPlugins.filter((plugin) => !currentPlugins.includes(plugin))\n      );\n    };\n    return NewOctokit;\n  }\n  constructor(options = {}) {\n    const hook = new Hook.Collection();\n    const requestDefaults = {\n      baseUrl: request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    };\n    requestDefaults.headers[\"user-agent\"] = options.userAgent ? `${options.userAgent} ${userAgentTrail}` : userAgentTrail;\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n    this.request = request.defaults(requestDefaults);\n    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = Object.assign(\n      {\n        debug: noop,\n        info: noop,\n        warn: consoleWarn,\n        error: consoleError\n      },\n      options.log\n    );\n    this.hook = hook;\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        const auth = createTokenAuth(options.auth);\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const { authStrategy, ...otherOptions } = options;\n      const auth = authStrategy(\n        Object.assign(\n          {\n            request: this.request,\n            log: this.log,\n            // we pass the current octokit instance as well as its constructor options\n            // to allow for authentication strategies that return a new octokit instance\n            // that shares the same internal state as the current one. The original\n            // requirement for this was the \"event-octokit\" authentication strategy\n            // of https://github.com/probot/octokit-auth-probot.\n            octokit: this,\n            octokitOptions: otherOptions\n          },\n          options.auth\n        )\n      );\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    }\n    const classConstructor = this.constructor;\n    for (let i = 0; i < classConstructor.plugins.length; ++i) {\n      Object.assign(this, classConstructor.plugins[i](this, options));\n    }\n  }\n  // assigned during constructor\n  request;\n  graphql;\n  log;\n  hook;\n  // TODO: type `octokit.auth` based on passed options.authStrategy\n  auth;\n}\nexport {\n  Octokit\n};\n","import { VERSION } from \"./version.js\";\nfunction requestLog(octokit) {\n  octokit.hook.wrap(\"request\", (request, options) => {\n    octokit.log.debug(\"request\", options);\n    const start = Date.now();\n    const requestOptions = octokit.request.endpoint.parse(options);\n    const path = requestOptions.url.replace(options.baseUrl, \"\");\n    return request(options).then((response) => {\n      const requestId = response.headers[\"x-github-request-id\"];\n      octokit.log.info(\n        `${requestOptions.method} ${path} - ${response.status} with id ${requestId} in ${Date.now() - start}ms`\n      );\n      return response;\n    }).catch((error) => {\n      const requestId = error.response?.headers[\"x-github-request-id\"] || \"UNKNOWN\";\n      octokit.log.error(\n        `${requestOptions.method} ${path} - ${error.status} with id ${requestId} in ${Date.now() - start}ms`\n      );\n      throw error;\n    });\n  });\n}\nrequestLog.VERSION = VERSION;\nexport {\n  requestLog\n};\n","// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/normalize-paginated-list-response.js\nfunction normalizePaginatedListResponse(response) {\n  if (!response.data) {\n    return {\n      ...response,\n      data: []\n    };\n  }\n  const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n  if (!responseNeedsNormalization) return response;\n  const incompleteResults = response.data.incomplete_results;\n  const repositorySelection = response.data.repository_selection;\n  const totalCount = response.data.total_count;\n  delete response.data.incomplete_results;\n  delete response.data.repository_selection;\n  delete response.data.total_count;\n  const namespaceKey = Object.keys(response.data)[0];\n  const data = response.data[namespaceKey];\n  response.data = data;\n  if (typeof incompleteResults !== \"undefined\") {\n    response.data.incomplete_results = incompleteResults;\n  }\n  if (typeof repositorySelection !== \"undefined\") {\n    response.data.repository_selection = repositorySelection;\n  }\n  response.data.total_count = totalCount;\n  return response;\n}\n\n// pkg/dist-src/iterator.js\nfunction iterator(octokit, route, parameters) {\n  const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n  const requestMethod = typeof route === \"function\" ? route : octokit.request;\n  const method = options.method;\n  const headers = options.headers;\n  let url = options.url;\n  return {\n    [Symbol.asyncIterator]: () => ({\n      async next() {\n        if (!url) return { done: true };\n        try {\n          const response = await requestMethod({ method, url, headers });\n          const normalizedResponse = normalizePaginatedListResponse(response);\n          url = ((normalizedResponse.headers.link || \"\").match(\n            /<([^>]+)>;\\s*rel=\"next\"/\n          ) || [])[1];\n          return { value: normalizedResponse };\n        } catch (error) {\n          if (error.status !== 409) throw error;\n          url = \"\";\n          return {\n            value: {\n              status: 200,\n              headers: {},\n              data: []\n            }\n          };\n        }\n      }\n    })\n  };\n}\n\n// pkg/dist-src/paginate.js\nfunction paginate(octokit, route, parameters, mapFn) {\n  if (typeof parameters === \"function\") {\n    mapFn = parameters;\n    parameters = void 0;\n  }\n  return gather(\n    octokit,\n    [],\n    iterator(octokit, route, parameters)[Symbol.asyncIterator](),\n    mapFn\n  );\n}\nfunction gather(octokit, results, iterator2, mapFn) {\n  return iterator2.next().then((result) => {\n    if (result.done) {\n      return results;\n    }\n    let earlyExit = false;\n    function done() {\n      earlyExit = true;\n    }\n    results = results.concat(\n      mapFn ? mapFn(result.value, done) : result.value.data\n    );\n    if (earlyExit) {\n      return results;\n    }\n    return gather(octokit, results, iterator2, mapFn);\n  });\n}\n\n// pkg/dist-src/compose-paginate.js\nvar composePaginateRest = Object.assign(paginate, {\n  iterator\n});\n\n// pkg/dist-src/generated/paginating-endpoints.js\nvar paginatingEndpoints = [\n  \"GET /advisories\",\n  \"GET /app/hook/deliveries\",\n  \"GET /app/installation-requests\",\n  \"GET /app/installations\",\n  \"GET /assignments/{assignment_id}/accepted_assignments\",\n  \"GET /classrooms\",\n  \"GET /classrooms/{classroom_id}/assignments\",\n  \"GET /enterprises/{enterprise}/code-security/configurations\",\n  \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories\",\n  \"GET /enterprises/{enterprise}/dependabot/alerts\",\n  \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n  \"GET /events\",\n  \"GET /gists\",\n  \"GET /gists/public\",\n  \"GET /gists/starred\",\n  \"GET /gists/{gist_id}/comments\",\n  \"GET /gists/{gist_id}/commits\",\n  \"GET /gists/{gist_id}/forks\",\n  \"GET /installation/repositories\",\n  \"GET /issues\",\n  \"GET /licenses\",\n  \"GET /marketplace_listing/plans\",\n  \"GET /marketplace_listing/plans/{plan_id}/accounts\",\n  \"GET /marketplace_listing/stubbed/plans\",\n  \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n  \"GET /networks/{owner}/{repo}/events\",\n  \"GET /notifications\",\n  \"GET /organizations\",\n  \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n  \"GET /orgs/{org}/actions/permissions/repositories\",\n  \"GET /orgs/{org}/actions/runner-groups\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\",\n  \"GET /orgs/{org}/actions/runners\",\n  \"GET /orgs/{org}/actions/secrets\",\n  \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/actions/variables\",\n  \"GET /orgs/{org}/actions/variables/{name}/repositories\",\n  \"GET /orgs/{org}/attestations/{subject_digest}\",\n  \"GET /orgs/{org}/blocks\",\n  \"GET /orgs/{org}/code-scanning/alerts\",\n  \"GET /orgs/{org}/code-security/configurations\",\n  \"GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories\",\n  \"GET /orgs/{org}/codespaces\",\n  \"GET /orgs/{org}/codespaces/secrets\",\n  \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/copilot/billing/seats\",\n  \"GET /orgs/{org}/copilot/metrics\",\n  \"GET /orgs/{org}/copilot/usage\",\n  \"GET /orgs/{org}/dependabot/alerts\",\n  \"GET /orgs/{org}/dependabot/secrets\",\n  \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/events\",\n  \"GET /orgs/{org}/failed_invitations\",\n  \"GET /orgs/{org}/hooks\",\n  \"GET /orgs/{org}/hooks/{hook_id}/deliveries\",\n  \"GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}\",\n  \"GET /orgs/{org}/insights/api/subject-stats\",\n  \"GET /orgs/{org}/insights/api/user-stats/{user_id}\",\n  \"GET /orgs/{org}/installations\",\n  \"GET /orgs/{org}/invitations\",\n  \"GET /orgs/{org}/invitations/{invitation_id}/teams\",\n  \"GET /orgs/{org}/issues\",\n  \"GET /orgs/{org}/members\",\n  \"GET /orgs/{org}/members/{username}/codespaces\",\n  \"GET /orgs/{org}/migrations\",\n  \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n  \"GET /orgs/{org}/organization-roles/{role_id}/teams\",\n  \"GET /orgs/{org}/organization-roles/{role_id}/users\",\n  \"GET /orgs/{org}/outside_collaborators\",\n  \"GET /orgs/{org}/packages\",\n  \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n  \"GET /orgs/{org}/personal-access-token-requests\",\n  \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\",\n  \"GET /orgs/{org}/personal-access-tokens\",\n  \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\",\n  \"GET /orgs/{org}/private-registries\",\n  \"GET /orgs/{org}/projects\",\n  \"GET /orgs/{org}/properties/values\",\n  \"GET /orgs/{org}/public_members\",\n  \"GET /orgs/{org}/repos\",\n  \"GET /orgs/{org}/rulesets\",\n  \"GET /orgs/{org}/rulesets/rule-suites\",\n  \"GET /orgs/{org}/secret-scanning/alerts\",\n  \"GET /orgs/{org}/security-advisories\",\n  \"GET /orgs/{org}/team/{team_slug}/copilot/metrics\",\n  \"GET /orgs/{org}/team/{team_slug}/copilot/usage\",\n  \"GET /orgs/{org}/teams\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n  \"GET /orgs/{org}/teams/{team_slug}/members\",\n  \"GET /orgs/{org}/teams/{team_slug}/projects\",\n  \"GET /orgs/{org}/teams/{team_slug}/repos\",\n  \"GET /orgs/{org}/teams/{team_slug}/teams\",\n  \"GET /projects/columns/{column_id}/cards\",\n  \"GET /projects/{project_id}/collaborators\",\n  \"GET /projects/{project_id}/columns\",\n  \"GET /repos/{owner}/{repo}/actions/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/caches\",\n  \"GET /repos/{owner}/{repo}/actions/organization-secrets\",\n  \"GET /repos/{owner}/{repo}/actions/organization-variables\",\n  \"GET /repos/{owner}/{repo}/actions/runners\",\n  \"GET /repos/{owner}/{repo}/actions/runs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/secrets\",\n  \"GET /repos/{owner}/{repo}/actions/variables\",\n  \"GET /repos/{owner}/{repo}/actions/workflows\",\n  \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n  \"GET /repos/{owner}/{repo}/activity\",\n  \"GET /repos/{owner}/{repo}/assignees\",\n  \"GET /repos/{owner}/{repo}/attestations/{subject_digest}\",\n  \"GET /repos/{owner}/{repo}/branches\",\n  \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n  \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n  \"GET /repos/{owner}/{repo}/code-scanning/analyses\",\n  \"GET /repos/{owner}/{repo}/codespaces\",\n  \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n  \"GET /repos/{owner}/{repo}/codespaces/secrets\",\n  \"GET /repos/{owner}/{repo}/collaborators\",\n  \"GET /repos/{owner}/{repo}/comments\",\n  \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/commits\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/status\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n  \"GET /repos/{owner}/{repo}/contributors\",\n  \"GET /repos/{owner}/{repo}/dependabot/alerts\",\n  \"GET /repos/{owner}/{repo}/dependabot/secrets\",\n  \"GET /repos/{owner}/{repo}/deployments\",\n  \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n  \"GET /repos/{owner}/{repo}/environments\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables\",\n  \"GET /repos/{owner}/{repo}/events\",\n  \"GET /repos/{owner}/{repo}/forks\",\n  \"GET /repos/{owner}/{repo}/hooks\",\n  \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n  \"GET /repos/{owner}/{repo}/invitations\",\n  \"GET /repos/{owner}/{repo}/issues\",\n  \"GET /repos/{owner}/{repo}/issues/comments\",\n  \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n  \"GET /repos/{owner}/{repo}/keys\",\n  \"GET /repos/{owner}/{repo}/labels\",\n  \"GET /repos/{owner}/{repo}/milestones\",\n  \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n  \"GET /repos/{owner}/{repo}/notifications\",\n  \"GET /repos/{owner}/{repo}/pages/builds\",\n  \"GET /repos/{owner}/{repo}/projects\",\n  \"GET /repos/{owner}/{repo}/pulls\",\n  \"GET /repos/{owner}/{repo}/pulls/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n  \"GET /repos/{owner}/{repo}/releases\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/rules/branches/{branch}\",\n  \"GET /repos/{owner}/{repo}/rulesets\",\n  \"GET /repos/{owner}/{repo}/rulesets/rule-suites\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n  \"GET /repos/{owner}/{repo}/security-advisories\",\n  \"GET /repos/{owner}/{repo}/stargazers\",\n  \"GET /repos/{owner}/{repo}/subscribers\",\n  \"GET /repos/{owner}/{repo}/tags\",\n  \"GET /repos/{owner}/{repo}/teams\",\n  \"GET /repos/{owner}/{repo}/topics\",\n  \"GET /repositories\",\n  \"GET /search/code\",\n  \"GET /search/commits\",\n  \"GET /search/issues\",\n  \"GET /search/labels\",\n  \"GET /search/repositories\",\n  \"GET /search/topics\",\n  \"GET /search/users\",\n  \"GET /teams/{team_id}/discussions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\",\n  \"GET /teams/{team_id}/invitations\",\n  \"GET /teams/{team_id}/members\",\n  \"GET /teams/{team_id}/projects\",\n  \"GET /teams/{team_id}/repos\",\n  \"GET /teams/{team_id}/teams\",\n  \"GET /user/blocks\",\n  \"GET /user/codespaces\",\n  \"GET /user/codespaces/secrets\",\n  \"GET /user/emails\",\n  \"GET /user/followers\",\n  \"GET /user/following\",\n  \"GET /user/gpg_keys\",\n  \"GET /user/installations\",\n  \"GET /user/installations/{installation_id}/repositories\",\n  \"GET /user/issues\",\n  \"GET /user/keys\",\n  \"GET /user/marketplace_purchases\",\n  \"GET /user/marketplace_purchases/stubbed\",\n  \"GET /user/memberships/orgs\",\n  \"GET /user/migrations\",\n  \"GET /user/migrations/{migration_id}/repositories\",\n  \"GET /user/orgs\",\n  \"GET /user/packages\",\n  \"GET /user/packages/{package_type}/{package_name}/versions\",\n  \"GET /user/public_emails\",\n  \"GET /user/repos\",\n  \"GET /user/repository_invitations\",\n  \"GET /user/social_accounts\",\n  \"GET /user/ssh_signing_keys\",\n  \"GET /user/starred\",\n  \"GET /user/subscriptions\",\n  \"GET /user/teams\",\n  \"GET /users\",\n  \"GET /users/{username}/attestations/{subject_digest}\",\n  \"GET /users/{username}/events\",\n  \"GET /users/{username}/events/orgs/{org}\",\n  \"GET /users/{username}/events/public\",\n  \"GET /users/{username}/followers\",\n  \"GET /users/{username}/following\",\n  \"GET /users/{username}/gists\",\n  \"GET /users/{username}/gpg_keys\",\n  \"GET /users/{username}/keys\",\n  \"GET /users/{username}/orgs\",\n  \"GET /users/{username}/packages\",\n  \"GET /users/{username}/projects\",\n  \"GET /users/{username}/received_events\",\n  \"GET /users/{username}/received_events/public\",\n  \"GET /users/{username}/repos\",\n  \"GET /users/{username}/social_accounts\",\n  \"GET /users/{username}/ssh_signing_keys\",\n  \"GET /users/{username}/starred\",\n  \"GET /users/{username}/subscriptions\"\n];\n\n// pkg/dist-src/paginating-endpoints.js\nfunction isPaginatingEndpoint(arg) {\n  if (typeof arg === \"string\") {\n    return paginatingEndpoints.includes(arg);\n  } else {\n    return false;\n  }\n}\n\n// pkg/dist-src/index.js\nfunction paginateRest(octokit) {\n  return {\n    paginate: Object.assign(paginate.bind(null, octokit), {\n      iterator: iterator.bind(null, octokit)\n    })\n  };\n}\npaginateRest.VERSION = VERSION;\nexport {\n  composePaginateRest,\n  isPaginatingEndpoint,\n  paginateRest,\n  paginatingEndpoints\n};\n","const VERSION = \"5.3.1\";\nexport {\n  VERSION\n};\n","import ENDPOINTS from \"./generated/endpoints.js\";\nconst endpointMethodsMap = /* @__PURE__ */ new Map();\nfor (const [scope, endpoints] of Object.entries(ENDPOINTS)) {\n  for (const [methodName, endpoint] of Object.entries(endpoints)) {\n    const [route, defaults, decorations] = endpoint;\n    const [method, url] = route.split(/ /);\n    const endpointDefaults = Object.assign(\n      {\n        method,\n        url\n      },\n      defaults\n    );\n    if (!endpointMethodsMap.has(scope)) {\n      endpointMethodsMap.set(scope, /* @__PURE__ */ new Map());\n    }\n    endpointMethodsMap.get(scope).set(methodName, {\n      scope,\n      methodName,\n      endpointDefaults,\n      decorations\n    });\n  }\n}\nconst handler = {\n  has({ scope }, methodName) {\n    return endpointMethodsMap.get(scope).has(methodName);\n  },\n  getOwnPropertyDescriptor(target, methodName) {\n    return {\n      value: this.get(target, methodName),\n      // ensures method is in the cache\n      configurable: true,\n      writable: true,\n      enumerable: true\n    };\n  },\n  defineProperty(target, methodName, descriptor) {\n    Object.defineProperty(target.cache, methodName, descriptor);\n    return true;\n  },\n  deleteProperty(target, methodName) {\n    delete target.cache[methodName];\n    return true;\n  },\n  ownKeys({ scope }) {\n    return [...endpointMethodsMap.get(scope).keys()];\n  },\n  set(target, methodName, value) {\n    return target.cache[methodName] = value;\n  },\n  get({ octokit, scope, cache }, methodName) {\n    if (cache[methodName]) {\n      return cache[methodName];\n    }\n    const method = endpointMethodsMap.get(scope).get(methodName);\n    if (!method) {\n      return void 0;\n    }\n    const { endpointDefaults, decorations } = method;\n    if (decorations) {\n      cache[methodName] = decorate(\n        octokit,\n        scope,\n        methodName,\n        endpointDefaults,\n        decorations\n      );\n    } else {\n      cache[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n    return cache[methodName];\n  }\n};\nfunction endpointsToMethods(octokit) {\n  const newMethods = {};\n  for (const scope of endpointMethodsMap.keys()) {\n    newMethods[scope] = new Proxy({ octokit, scope, cache: {} }, handler);\n  }\n  return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  function withDecorations(...args) {\n    let options = requestWithDefaults.endpoint.merge(...args);\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: void 0\n      });\n      return requestWithDefaults(options);\n    }\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(\n        `octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`\n      );\n    }\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n    if (decorations.renamedParameters) {\n      const options2 = requestWithDefaults.endpoint.merge(...args);\n      for (const [name, alias] of Object.entries(\n        decorations.renamedParameters\n      )) {\n        if (name in options2) {\n          octokit.log.warn(\n            `\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`\n          );\n          if (!(alias in options2)) {\n            options2[alias] = options2[name];\n          }\n          delete options2[name];\n        }\n      }\n      return requestWithDefaults(options2);\n    }\n    return requestWithDefaults(...args);\n  }\n  return Object.assign(withDecorations, requestWithDefaults);\n}\nexport {\n  endpointsToMethods\n};\n//# sourceMappingURL=endpoints-to-methods.js.map\n","const Endpoints = {\n  actions: {\n    addCustomLabelsToSelfHostedRunnerForOrg: [\n      \"POST /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    addCustomLabelsToSelfHostedRunnerForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    addRepoAccessToSelfHostedRunnerGroupInOrg: [\n      \"PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\n    ],\n    approveWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"\n    ],\n    cancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"\n    ],\n    createEnvironmentVariable: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/variables\"\n    ],\n    createOrUpdateEnvironmentSecret: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\n    ],\n    createOrgVariable: [\"POST /orgs/{org}/actions/variables\"],\n    createRegistrationTokenForOrg: [\n      \"POST /orgs/{org}/actions/runners/registration-token\"\n    ],\n    createRegistrationTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/registration-token\"\n    ],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/remove-token\"\n    ],\n    createRepoVariable: [\"POST /repos/{owner}/{repo}/actions/variables\"],\n    createWorkflowDispatch: [\n      \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"\n    ],\n    deleteActionsCacheById: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\"\n    ],\n    deleteActionsCacheByKey: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\"\n    ],\n    deleteArtifact: [\n      \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"\n    ],\n    deleteEnvironmentSecret: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    deleteEnvironmentVariable: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteOrgVariable: [\"DELETE /orgs/{org}/actions/variables/{name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\n    ],\n    deleteRepoVariable: [\n      \"DELETE /repos/{owner}/{repo}/actions/variables/{name}\"\n    ],\n    deleteSelfHostedRunnerFromOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}\"\n    ],\n    deleteSelfHostedRunnerFromRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"\n    ],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\n      \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\n    ],\n    disableSelectedRepositoryGithubActionsOrganization: [\n      \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"\n    ],\n    disableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"\n    ],\n    downloadArtifact: [\n      \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"\n    ],\n    downloadJobLogsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"\n    ],\n    downloadWorkflowRunAttemptLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\"\n    ],\n    downloadWorkflowRunLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\n    ],\n    enableSelectedRepositoryGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"\n    ],\n    enableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"\n    ],\n    forceCancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel\"\n    ],\n    generateRunnerJitconfigForOrg: [\n      \"POST /orgs/{org}/actions/runners/generate-jitconfig\"\n    ],\n    generateRunnerJitconfigForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig\"\n    ],\n    getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n    getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n    getActionsCacheUsageByRepoForOrg: [\n      \"GET /orgs/{org}/actions/cache/usage-by-repository\"\n    ],\n    getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n    getAllowedActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/selected-actions\"\n    ],\n    getAllowedActionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"\n    ],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getCustomOidcSubClaimForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/oidc/customization/sub\"\n    ],\n    getEnvironmentPublicKey: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key\"\n    ],\n    getEnvironmentSecret: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    getEnvironmentVariable: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\"\n    ],\n    getGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/workflow\"\n    ],\n    getGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/workflow\"\n    ],\n    getGithubActionsPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions\"\n    ],\n    getGithubActionsPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\"\n    ],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getOrgVariable: [\"GET /orgs/{org}/actions/variables/{name}\"],\n    getPendingDeploymentsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\n    ],\n    getRepoPermissions: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\",\n      {},\n      { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] }\n    ],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getRepoVariable: [\"GET /repos/{owner}/{repo}/actions/variables/{name}\"],\n    getReviewsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"\n    ],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"\n    ],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowAccessToRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/access\"\n    ],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\"\n    ],\n    getWorkflowRunUsage: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"\n    ],\n    getWorkflowUsage: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"\n    ],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets\"\n    ],\n    listEnvironmentVariables: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables\"\n    ],\n    listJobsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"\n    ],\n    listJobsForWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\"\n    ],\n    listLabelsForSelfHostedRunnerForOrg: [\n      \"GET /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    listLabelsForSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listOrgVariables: [\"GET /orgs/{org}/actions/variables\"],\n    listRepoOrganizationSecrets: [\n      \"GET /repos/{owner}/{repo}/actions/organization-secrets\"\n    ],\n    listRepoOrganizationVariables: [\n      \"GET /repos/{owner}/{repo}/actions/organization-variables\"\n    ],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoVariables: [\"GET /repos/{owner}/{repo}/actions/variables\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/downloads\"\n    ],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"\n    ],\n    listSelectedReposForOrgVariable: [\n      \"GET /orgs/{org}/actions/variables/{name}/repositories\"\n    ],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/repositories\"\n    ],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"\n    ],\n    listWorkflowRuns: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"\n    ],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunJobForWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\"\n    ],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    reRunWorkflowFailedJobs: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\"\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    removeCustomLabelFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\"\n    ],\n    removeCustomLabelFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    removeSelectedRepoFromOrgVariable: [\n      \"DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\n    ],\n    reviewCustomGatesForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule\"\n    ],\n    reviewPendingDeploymentsForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\n    ],\n    setAllowedActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/selected-actions\"\n    ],\n    setAllowedActionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"\n    ],\n    setCustomLabelsForSelfHostedRunnerForOrg: [\n      \"PUT /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    setCustomLabelsForSelfHostedRunnerForRepo: [\n      \"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    setCustomOidcSubClaimForRepo: [\n      \"PUT /repos/{owner}/{repo}/actions/oidc/customization/sub\"\n    ],\n    setGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/workflow\"\n    ],\n    setGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/workflow\"\n    ],\n    setGithubActionsPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions\"\n    ],\n    setGithubActionsPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"\n    ],\n    setSelectedReposForOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories\"\n    ],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories\"\n    ],\n    setWorkflowAccessToRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/access\"\n    ],\n    updateEnvironmentVariable: [\n      \"PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\"\n    ],\n    updateOrgVariable: [\"PATCH /orgs/{org}/actions/variables/{name}\"],\n    updateRepoVariable: [\n      \"PATCH /repos/{owner}/{repo}/actions/variables/{name}\"\n    ]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\n      \"DELETE /notifications/threads/{thread_id}/subscription\"\n    ],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\n      \"GET /notifications/threads/{thread_id}/subscription\"\n    ],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\n      \"GET /users/{username}/events/orgs/{org}\"\n    ],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\n      \"GET /users/{username}/received_events/public\"\n    ],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/notifications\"\n    ],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsDone: [\"DELETE /notifications/threads/{thread_id}\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\n      \"PUT /notifications/threads/{thread_id}/subscription\"\n    ],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] }\n    ],\n    addRepoToInstallationForAuthenticatedUser: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\"\n    ],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\n      \"POST /app/installations/{installation_id}/access_tokens\"\n    ],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\n      \"GET /marketplace_listing/accounts/{account_id}\"\n    ],\n    getSubscriptionPlanForAccountStubbed: [\n      \"GET /marketplace_listing/stubbed/accounts/{account_id}\"\n    ],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\n      \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"\n    ],\n    listInstallationReposForAuthenticatedUser: [\n      \"GET /user/installations/{installation_id}/repositories\"\n    ],\n    listInstallationRequestsForAuthenticatedApp: [\n      \"GET /app/installation-requests\"\n    ],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\n      \"GET /user/marketplace_purchases/stubbed\"\n    ],\n    listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n    redeliverWebhookDelivery: [\n      \"POST /app/hook/deliveries/{delivery_id}/attempts\"\n    ],\n    removeRepoFromInstallation: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] }\n    ],\n    removeRepoFromInstallationForAuthenticatedUser: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"\n    ],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\n      \"DELETE /app/installations/{installation_id}/suspended\"\n    ],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\n      \"GET /users/{username}/settings/billing/actions\"\n    ],\n    getGithubBillingUsageReportOrg: [\n      \"GET /organizations/{org}/settings/billing/usage\"\n    ],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\n      \"GET /users/{username}/settings/billing/packages\"\n    ],\n    getSharedStorageBillingOrg: [\n      \"GET /orgs/{org}/settings/billing/shared-storage\"\n    ],\n    getSharedStorageBillingUser: [\n      \"GET /users/{username}/settings/billing/shared-storage\"\n    ]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\n      \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"\n    ],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\n      \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"\n    ],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestRun: [\n      \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\"\n    ],\n    rerequestSuite: [\n      \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"\n    ],\n    setSuitesPreferences: [\n      \"PATCH /repos/{owner}/{repo}/check-suites/preferences\"\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n  },\n  codeScanning: {\n    commitAutofix: [\n      \"POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits\"\n    ],\n    createAutofix: [\n      \"POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix\"\n    ],\n    createVariantAnalysis: [\n      \"POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses\"\n    ],\n    deleteAnalysis: [\n      \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"\n    ],\n    deleteCodeqlDatabase: [\n      \"DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\"\n    ],\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n      {},\n      { renamedParameters: { alert_id: \"alert_number\" } }\n    ],\n    getAnalysis: [\n      \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"\n    ],\n    getAutofix: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix\"\n    ],\n    getCodeqlDatabase: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\"\n    ],\n    getDefaultSetup: [\"GET /repos/{owner}/{repo}/code-scanning/default-setup\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    getVariantAnalysis: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}\"\n    ],\n    getVariantAnalysisRepoTask: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}\"\n    ],\n    listAlertInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n      {},\n      { renamed: [\"codeScanning\", \"listAlertInstances\"] }\n    ],\n    listCodeqlDatabases: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\"\n    ],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"\n    ],\n    updateDefaultSetup: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/default-setup\"\n    ],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codeSecurity: {\n    attachConfiguration: [\n      \"POST /orgs/{org}/code-security/configurations/{configuration_id}/attach\"\n    ],\n    attachEnterpriseConfiguration: [\n      \"POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach\"\n    ],\n    createConfiguration: [\"POST /orgs/{org}/code-security/configurations\"],\n    createConfigurationForEnterprise: [\n      \"POST /enterprises/{enterprise}/code-security/configurations\"\n    ],\n    deleteConfiguration: [\n      \"DELETE /orgs/{org}/code-security/configurations/{configuration_id}\"\n    ],\n    deleteConfigurationForEnterprise: [\n      \"DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}\"\n    ],\n    detachConfiguration: [\n      \"DELETE /orgs/{org}/code-security/configurations/detach\"\n    ],\n    getConfiguration: [\n      \"GET /orgs/{org}/code-security/configurations/{configuration_id}\"\n    ],\n    getConfigurationForRepository: [\n      \"GET /repos/{owner}/{repo}/code-security-configuration\"\n    ],\n    getConfigurationsForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations\"\n    ],\n    getConfigurationsForOrg: [\"GET /orgs/{org}/code-security/configurations\"],\n    getDefaultConfigurations: [\n      \"GET /orgs/{org}/code-security/configurations/defaults\"\n    ],\n    getDefaultConfigurationsForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/defaults\"\n    ],\n    getRepositoriesForConfiguration: [\n      \"GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories\"\n    ],\n    getRepositoriesForEnterpriseConfiguration: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories\"\n    ],\n    getSingleConfigurationForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}\"\n    ],\n    setConfigurationAsDefault: [\n      \"PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults\"\n    ],\n    setConfigurationAsDefaultForEnterprise: [\n      \"PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults\"\n    ],\n    updateConfiguration: [\n      \"PATCH /orgs/{org}/code-security/configurations/{configuration_id}\"\n    ],\n    updateEnterpriseConfiguration: [\n      \"PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}\"\n    ]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n    getConductCode: [\"GET /codes_of_conduct/{key}\"]\n  },\n  codespaces: {\n    addRepositoryForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    checkPermissionsForDevcontainer: [\n      \"GET /repos/{owner}/{repo}/codespaces/permissions_check\"\n    ],\n    codespaceMachinesForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/machines\"\n    ],\n    createForAuthenticatedUser: [\"POST /user/codespaces\"],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}\"\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    createOrUpdateSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}\"\n    ],\n    createWithPrForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\"\n    ],\n    createWithRepoForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/codespaces\"\n    ],\n    deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n    deleteFromOrganization: [\n      \"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    deleteSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}\"\n    ],\n    exportForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/exports\"\n    ],\n    getCodespacesForUserInOrg: [\n      \"GET /orgs/{org}/members/{username}/codespaces\"\n    ],\n    getExportDetailsForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/exports/{export_id}\"\n    ],\n    getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/codespaces/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    getPublicKeyForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/public-key\"\n    ],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\"\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    getSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}\"\n    ],\n    listDevcontainersInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/devcontainers\"\n    ],\n    listForAuthenticatedUser: [\"GET /user/codespaces\"],\n    listInOrganization: [\n      \"GET /orgs/{org}/codespaces\",\n      {},\n      { renamedParameters: { org_id: \"org\" } }\n    ],\n    listInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces\"\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/codespaces/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n    listRepositoriesForSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    preFlightWithRepoForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/new\"\n    ],\n    publishForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/publish\"\n    ],\n    removeRepositoryForSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    repoMachinesForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/machines\"\n    ],\n    setRepositoriesForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n    stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n    stopInOrganization: [\n      \"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\"\n    ],\n    updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"]\n  },\n  copilot: {\n    addCopilotSeatsForTeams: [\n      \"POST /orgs/{org}/copilot/billing/selected_teams\"\n    ],\n    addCopilotSeatsForUsers: [\n      \"POST /orgs/{org}/copilot/billing/selected_users\"\n    ],\n    cancelCopilotSeatAssignmentForTeams: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_teams\"\n    ],\n    cancelCopilotSeatAssignmentForUsers: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_users\"\n    ],\n    copilotMetricsForOrganization: [\"GET /orgs/{org}/copilot/metrics\"],\n    copilotMetricsForTeam: [\"GET /orgs/{org}/team/{team_slug}/copilot/metrics\"],\n    getCopilotOrganizationDetails: [\"GET /orgs/{org}/copilot/billing\"],\n    getCopilotSeatDetailsForUser: [\n      \"GET /orgs/{org}/members/{username}/copilot\"\n    ],\n    listCopilotSeats: [\"GET /orgs/{org}/copilot/billing/seats\"],\n    usageMetricsForOrg: [\"GET /orgs/{org}/copilot/usage\"],\n    usageMetricsForTeam: [\"GET /orgs/{org}/team/{team_slug}/copilot/usage\"]\n  },\n  dependabot: {\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}\"\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\"\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/dependabot/alerts\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/dependabot/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\n    listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"\n    ]\n  },\n  dependencyGraph: {\n    createRepositorySnapshot: [\n      \"POST /repos/{owner}/{repo}/dependency-graph/snapshots\"\n    ],\n    diffRange: [\n      \"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\"\n    ],\n    exportSbom: [\"GET /repos/{owner}/{repo}/dependency-graph/sbom\"]\n  },\n  emojis: { get: [\"GET /emojis\"] },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\n      \"GET /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] }\n    ],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\n      \"DELETE /repos/{owner}/{repo}/interaction-limits\"\n    ],\n    removeRestrictionsForYourPublicRepos: [\n      \"DELETE /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] }\n    ],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\n      \"PUT /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] }\n    ]\n  },\n  issues: {\n    addAssignees: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\n    ],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    addSubIssue: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\"\n    ],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    checkUserCanBeAssignedToIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}\"\n    ],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"\n    ],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"\n    ],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\n      \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\"\n    ],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\n      \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"\n    ],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"\n    ],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    listSubIssues: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\"\n    ],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"\n    ],\n    removeAssignees: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\n    ],\n    removeLabel: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"\n    ],\n    removeSubIssue: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue\"\n    ],\n    reprioritizeSubIssue: [\n      \"PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority\"\n    ],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\n      \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"\n    ]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\n      \"POST /markdown/raw\",\n      { headers: { \"content-type\": \"text/plain; charset=utf-8\" } }\n    ]\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getAllVersions: [\"GET /versions\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"]\n  },\n  migrations: {\n    deleteArchiveForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/archive\"\n    ],\n    deleteArchiveForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/archive\"\n    ],\n    downloadArchiveForOrg: [\n      \"GET /orgs/{org}/migrations/{migration_id}/archive\"\n    ],\n    getArchiveForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/archive\"\n    ],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n    listForAuthenticatedUser: [\"GET /user/migrations\"],\n    listForOrg: [\"GET /orgs/{org}/migrations\"],\n    listReposForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/repositories\"\n    ],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n    listReposForUser: [\n      \"GET /user/migrations/{migration_id}/repositories\",\n      {},\n      { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] }\n    ],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    unlockRepoForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\"\n    ],\n    unlockRepoForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\"\n    ]\n  },\n  oidc: {\n    getOidcCustomSubTemplateForOrg: [\n      \"GET /orgs/{org}/actions/oidc/customization/sub\"\n    ],\n    updateOidcCustomSubTemplateForOrg: [\n      \"PUT /orgs/{org}/actions/oidc/customization/sub\"\n    ]\n  },\n  orgs: {\n    addSecurityManagerTeam: [\n      \"PUT /orgs/{org}/security-managers/teams/{team_slug}\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team\"\n      }\n    ],\n    assignTeamToOrgRole: [\n      \"PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}\"\n    ],\n    assignUserToOrgRole: [\n      \"PUT /orgs/{org}/organization-roles/users/{username}/{role_id}\"\n    ],\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\n      \"PUT /orgs/{org}/outside_collaborators/{username}\"\n    ],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createOrUpdateCustomProperties: [\"PATCH /orgs/{org}/properties/schema\"],\n    createOrUpdateCustomPropertiesValuesForRepos: [\n      \"PATCH /orgs/{org}/properties/values\"\n    ],\n    createOrUpdateCustomProperty: [\n      \"PUT /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    delete: [\"DELETE /orgs/{org}\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    enableOrDisableSecurityProductOnAllOrgRepos: [\n      \"POST /orgs/{org}/{security_product}/{enablement}\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization\"\n      }\n    ],\n    get: [\"GET /orgs/{org}\"],\n    getAllCustomProperties: [\"GET /orgs/{org}/properties/schema\"],\n    getCustomProperty: [\n      \"GET /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getOrgRole: [\"GET /orgs/{org}/organization-roles/{role_id}\"],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\n      \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\"\n    ],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listAttestations: [\"GET /orgs/{org}/attestations/{subject_digest}\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listCustomPropertiesValuesForRepos: [\"GET /orgs/{org}/properties/values\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOrgRoleTeams: [\"GET /orgs/{org}/organization-roles/{role_id}/teams\"],\n    listOrgRoleUsers: [\"GET /orgs/{org}/organization-roles/{role_id}/users\"],\n    listOrgRoles: [\"GET /orgs/{org}/organization-roles\"],\n    listOrganizationFineGrainedPermissions: [\n      \"GET /orgs/{org}/organization-fine-grained-permissions\"\n    ],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPatGrantRepositories: [\n      \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\"\n    ],\n    listPatGrantRequestRepositories: [\n      \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\"\n    ],\n    listPatGrantRequests: [\"GET /orgs/{org}/personal-access-token-requests\"],\n    listPatGrants: [\"GET /orgs/{org}/personal-access-tokens\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listSecurityManagerTeams: [\n      \"GET /orgs/{org}/security-managers\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams\"\n      }\n    ],\n    listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\n    ],\n    removeCustomProperty: [\n      \"DELETE /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\n      \"DELETE /orgs/{org}/outside_collaborators/{username}\"\n    ],\n    removePublicMembershipForAuthenticatedUser: [\n      \"DELETE /orgs/{org}/public_members/{username}\"\n    ],\n    removeSecurityManagerTeam: [\n      \"DELETE /orgs/{org}/security-managers/teams/{team_slug}\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team\"\n      }\n    ],\n    reviewPatGrantRequest: [\n      \"POST /orgs/{org}/personal-access-token-requests/{pat_request_id}\"\n    ],\n    reviewPatGrantRequestsInBulk: [\n      \"POST /orgs/{org}/personal-access-token-requests\"\n    ],\n    revokeAllOrgRolesTeam: [\n      \"DELETE /orgs/{org}/organization-roles/teams/{team_slug}\"\n    ],\n    revokeAllOrgRolesUser: [\n      \"DELETE /orgs/{org}/organization-roles/users/{username}\"\n    ],\n    revokeOrgRoleTeam: [\n      \"DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}\"\n    ],\n    revokeOrgRoleUser: [\n      \"DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}\"\n    ],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\n      \"PUT /orgs/{org}/public_members/{username}\"\n    ],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateMembershipForAuthenticatedUser: [\n      \"PATCH /user/memberships/orgs/{org}\"\n    ],\n    updatePatAccess: [\"POST /orgs/{org}/personal-access-tokens/{pat_id}\"],\n    updatePatAccesses: [\"POST /orgs/{org}/personal-access-tokens\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageVersionForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    deletePackageVersionForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    deletePackageVersionForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n      {},\n      { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] }\n    ],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\",\n      {},\n      {\n        renamed: [\n          \"packages\",\n          \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"\n        ]\n      }\n    ],\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\"\n    ],\n    getAllPackageVersionsForPackageOwnedByOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"\n    ],\n    getAllPackageVersionsForPackageOwnedByUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions\"\n    ],\n    getPackageForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}\"\n    ],\n    getPackageForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}\"\n    ],\n    getPackageForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}\"\n    ],\n    getPackageVersionForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getPackageVersionForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getPackageVersionForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    listDockerMigrationConflictingPackagesForAuthenticatedUser: [\n      \"GET /user/docker/conflicts\"\n    ],\n    listDockerMigrationConflictingPackagesForOrganization: [\n      \"GET /orgs/{org}/docker/conflicts\"\n    ],\n    listDockerMigrationConflictingPackagesForUser: [\n      \"GET /users/{username}/docker/conflicts\"\n    ],\n    listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n    listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n    listPackagesForUser: [\"GET /users/{username}/packages\"],\n    restorePackageForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageVersionForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ],\n    restorePackageVersionForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ],\n    restorePackageVersionForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ]\n  },\n  privateRegistries: {\n    createOrgPrivateRegistry: [\"POST /orgs/{org}/private-registries\"],\n    deleteOrgPrivateRegistry: [\n      \"DELETE /orgs/{org}/private-registries/{secret_name}\"\n    ],\n    getOrgPrivateRegistry: [\"GET /orgs/{org}/private-registries/{secret_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/private-registries/public-key\"],\n    listOrgPrivateRegistries: [\"GET /orgs/{org}/private-registries\"],\n    updateOrgPrivateRegistry: [\n      \"PATCH /orgs/{org}/private-registries/{secret_name}\"\n    ]\n  },\n  projects: {\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n    createCard: [\"POST /projects/columns/{column_id}/cards\"],\n    createColumn: [\"POST /projects/{project_id}/columns\"],\n    createForAuthenticatedUser: [\"POST /user/projects\"],\n    createForOrg: [\"POST /orgs/{org}/projects\"],\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n    delete: [\"DELETE /projects/{project_id}\"],\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n    get: [\"GET /projects/{project_id}\"],\n    getCard: [\"GET /projects/columns/cards/{card_id}\"],\n    getColumn: [\"GET /projects/columns/{column_id}\"],\n    getPermissionForUser: [\n      \"GET /projects/{project_id}/collaborators/{username}/permission\"\n    ],\n    listCards: [\"GET /projects/columns/{column_id}/cards\"],\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n    listColumns: [\"GET /projects/{project_id}/columns\"],\n    listForOrg: [\"GET /orgs/{org}/projects\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n    listForUser: [\"GET /users/{username}/projects\"],\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n    removeCollaborator: [\n      \"DELETE /projects/{project_id}/collaborators/{username}\"\n    ],\n    update: [\"PATCH /projects/{project_id}\"],\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n    updateColumn: [\"PATCH /projects/columns/{column_id}\"]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"\n    ],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\n    ],\n    deletePendingReview: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    deleteReviewComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\n    ],\n    dismissReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    listReviewComments: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\n    ],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    requestReviewers: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    submitReview: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\"\n    ],\n    updateReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    updateReviewComment: [\n      \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\n    ]\n  },\n  rateLimit: { get: [\"GET /rate_limit\"] },\n  reactions: {\n    createForCommitComment: [\n      \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\n    ],\n    createForIssue: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\"\n    ],\n    createForIssueComment: [\n      \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\n    ],\n    createForPullRequestReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\n    ],\n    createForRelease: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\"\n    ],\n    createForTeamDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\n    ],\n    createForTeamDiscussionInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\n    ],\n    deleteForCommitComment: [\n      \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForIssue: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\"\n    ],\n    deleteForIssueComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForPullRequestComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForRelease: [\n      \"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\"\n    ],\n    deleteForTeamDiscussion: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\"\n    ],\n    deleteForTeamDiscussionComment: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\"\n    ],\n    listForCommitComment: [\n      \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\n    ],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n    listForIssueComment: [\n      \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\n    ],\n    listForPullRequestReviewComment: [\n      \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\n    ],\n    listForRelease: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\"\n    ],\n    listForTeamDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\n    ],\n    listForTeamDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\n    ]\n  },\n  repos: {\n    acceptInvitation: [\n      \"PATCH /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] }\n    ],\n    acceptInvitationForAuthenticatedUser: [\n      \"PATCH /user/repository_invitations/{invitation_id}\"\n    ],\n    addAppAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    addTeamAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    addUserAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    cancelPagesDeployment: [\n      \"POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel\"\n    ],\n    checkAutomatedSecurityFixes: [\n      \"GET /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkPrivateVulnerabilityReporting: [\n      \"GET /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    checkVulnerabilityAlerts: [\n      \"GET /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    compareCommitsWithBasehead: [\n      \"GET /repos/{owner}/{repo}/compare/{basehead}\"\n    ],\n    createAttestation: [\"POST /repos/{owner}/{repo}/attestations\"],\n    createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n    createCommitComment: [\n      \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\n    ],\n    createCommitSignatureProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentBranchPolicy: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\n    ],\n    createDeploymentProtectionRule: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\n    ],\n    createDeploymentStatus: [\n      \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\n    ],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateCustomPropertiesValues: [\n      \"PATCH /repos/{owner}/{repo}/properties/values\"\n    ],\n    createOrUpdateEnvironment: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createOrgRuleset: [\"POST /orgs/{org}/rulesets\"],\n    createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployments\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createRepoRuleset: [\"POST /repos/{owner}/{repo}/rulesets\"],\n    createUsingTemplate: [\n      \"POST /repos/{template_owner}/{template_repo}/generate\"\n    ],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\n      \"DELETE /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] }\n    ],\n    declineInvitationForAuthenticatedUser: [\n      \"DELETE /user/repository_invitations/{invitation_id}\"\n    ],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\n    ],\n    deleteAdminBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    deleteAnEnvironment: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    deleteBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\n      \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"\n    ],\n    deleteDeploymentBranchPolicy: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\n      \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"\n    ],\n    deleteOrgRuleset: [\"DELETE /orgs/{org}/rulesets/{ruleset_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n    deletePullRequestReviewProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\n      \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"\n    ],\n    deleteRepoRuleset: [\"DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\n      \"DELETE /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    disableDeploymentProtectionRule: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\n    ],\n    disablePrivateVulnerabilityReporting: [\n      \"DELETE /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    disableVulnerabilityAlerts: [\n      \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    downloadArchive: [\n      \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n      {},\n      { renamed: [\"repos\", \"downloadZipballArchive\"] }\n    ],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\n      \"PUT /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    enablePrivateVulnerabilityReporting: [\n      \"PUT /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    enableVulnerabilityAlerts: [\n      \"PUT /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    generateReleaseNotes: [\n      \"POST /repos/{owner}/{repo}/releases/generate-notes\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\n    ],\n    getAdminBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    getAllDeploymentProtectionRules: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\n    ],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"\n    ],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n    getAppsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"\n    ],\n    getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    getBranchRules: [\"GET /repos/{owner}/{repo}/rules/branches/{branch}\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\n      \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"\n    ],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getCustomDeploymentProtectionRule: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\n    ],\n    getCustomPropertiesValues: [\"GET /repos/{owner}/{repo}/properties/values\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentBranchPolicy: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    getDeploymentStatus: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"\n    ],\n    getEnvironment: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getOrgRuleSuite: [\"GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}\"],\n    getOrgRuleSuites: [\"GET /orgs/{org}/rulesets/rule-suites\"],\n    getOrgRuleset: [\"GET /orgs/{org}/rulesets/{ruleset_id}\"],\n    getOrgRulesets: [\"GET /orgs/{org}/rulesets\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getPagesDeployment: [\n      \"GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}\"\n    ],\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getRepoRuleSuite: [\n      \"GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}\"\n    ],\n    getRepoRuleSuites: [\"GET /repos/{owner}/{repo}/rulesets/rule-suites\"],\n    getRepoRuleset: [\"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    getRepoRulesets: [\"GET /repos/{owner}/{repo}/rulesets\"],\n    getStatusChecksProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    getTeamsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"\n    ],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"\n    ],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"\n    ],\n    getWebhookDelivery: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\"\n    ],\n    listActivities: [\"GET /repos/{owner}/{repo}/activity\"],\n    listAttestations: [\n      \"GET /repos/{owner}/{repo}/attestations/{subject_digest}\"\n    ],\n    listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\"\n    ],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\n    ],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\n      \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listCustomDeploymentRuleIntegrations: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\"\n    ],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentBranchPolicies: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\n    ],\n    listDeploymentStatuses: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\n    ],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\"\n    ],\n    listReleaseAssets: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"\n    ],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhookDeliveries: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\"\n    ],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\n    ],\n    removeAppAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    removeCollaborator: [\n      \"DELETE /repos/{owner}/{repo}/collaborators/{username}\"\n    ],\n    removeStatusCheckContexts: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    removeStatusCheckProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    removeTeamAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    removeUserAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    setAppAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    setStatusCheckContexts: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    setTeamAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    setUserAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateDeploymentBranchPolicy: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\n      \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"\n    ],\n    updateOrgRuleset: [\"PUT /orgs/{org}/rulesets/{ruleset_id}\"],\n    updatePullRequestReviewProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\n      \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"\n    ],\n    updateRepoRuleset: [\"PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    updateStatusCheckPotection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n      {},\n      { renamed: [\"repos\", \"updateStatusCheckProtection\"] }\n    ],\n    updateStatusCheckProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\n      \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"\n    ],\n    uploadReleaseAsset: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n      { baseUrl: \"https://uploads.github.com\" }\n    ]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\"],\n    issuesAndPullRequests: [\"GET /search/issues\"],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\"],\n    users: [\"GET /search/users\"]\n  },\n  secretScanning: {\n    createPushProtectionBypass: [\n      \"POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses\"\n    ],\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\n    ],\n    getScanHistory: [\"GET /repos/{owner}/{repo}/secret-scanning/scan-history\"],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/secret-scanning/alerts\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    listLocationsForAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\"\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\n    ]\n  },\n  securityAdvisories: {\n    createFork: [\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks\"\n    ],\n    createPrivateVulnerabilityReport: [\n      \"POST /repos/{owner}/{repo}/security-advisories/reports\"\n    ],\n    createRepositoryAdvisory: [\n      \"POST /repos/{owner}/{repo}/security-advisories\"\n    ],\n    createRepositoryAdvisoryCveRequest: [\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve\"\n    ],\n    getGlobalAdvisory: [\"GET /advisories/{ghsa_id}\"],\n    getRepositoryAdvisory: [\n      \"GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\n    ],\n    listGlobalAdvisories: [\"GET /advisories\"],\n    listOrgRepositoryAdvisories: [\"GET /orgs/{org}/security-advisories\"],\n    listRepositoryAdvisories: [\"GET /repos/{owner}/{repo}/security-advisories\"],\n    updateRepositoryAdvisory: [\n      \"PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\n    ]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    addOrUpdateProjectPermissionsInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\n    ],\n    addOrUpdateRepoPermissionsInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    checkPermissionsForProjectInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\n    ],\n    checkPermissionsForRepoInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\n    ],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    deleteDiscussionInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    getDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    getMembershipForUserInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\n    ],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/invitations\"\n    ],\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    removeProjectInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\n    ],\n    removeRepoInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    updateDiscussionCommentInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    updateDiscussionInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\n      \"POST /user/emails\",\n      {},\n      { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] }\n    ],\n    addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n    addSocialAccountForAuthenticatedUser: [\"POST /user/social_accounts\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\n      \"POST /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] }\n    ],\n    createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\n      \"POST /user/keys\",\n      {},\n      { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] }\n    ],\n    createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n    createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\n    deleteEmailForAuthenticated: [\n      \"DELETE /user/emails\",\n      {},\n      { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] }\n    ],\n    deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\n      \"DELETE /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] }\n    ],\n    deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\n      \"DELETE /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] }\n    ],\n    deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n    deleteSocialAccountForAuthenticatedUser: [\"DELETE /user/social_accounts\"],\n    deleteSshSigningKeyForAuthenticatedUser: [\n      \"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\"\n    ],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getById: [\"GET /user/{account_id}\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\n      \"GET /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] }\n    ],\n    getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\n      \"GET /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] }\n    ],\n    getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n    getSshSigningKeyForAuthenticatedUser: [\n      \"GET /user/ssh_signing_keys/{ssh_signing_key_id}\"\n    ],\n    list: [\"GET /users\"],\n    listAttestations: [\"GET /users/{username}/attestations/{subject_digest}\"],\n    listBlockedByAuthenticated: [\n      \"GET /user/blocks\",\n      {},\n      { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] }\n    ],\n    listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\n      \"GET /user/emails\",\n      {},\n      { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] }\n    ],\n    listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\n      \"GET /user/following\",\n      {},\n      { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] }\n    ],\n    listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\n      \"GET /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] }\n    ],\n    listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\n      \"GET /user/public_emails\",\n      {},\n      { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] }\n    ],\n    listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\n      \"GET /user/keys\",\n      {},\n      { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] }\n    ],\n    listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n    listSocialAccountsForAuthenticatedUser: [\"GET /user/social_accounts\"],\n    listSocialAccountsForUser: [\"GET /users/{username}/social_accounts\"],\n    listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\n    listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\n      \"PATCH /user/email/visibility\",\n      {},\n      { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] }\n    ],\n    setPrimaryEmailVisibilityForAuthenticatedUser: [\n      \"PATCH /user/email/visibility\"\n    ],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\nvar endpoints_default = Endpoints;\nexport {\n  endpoints_default as default\n};\n//# sourceMappingURL=endpoints.js.map\n","import { VERSION } from \"./version.js\";\nimport { endpointsToMethods } from \"./endpoints-to-methods.js\";\nfunction restEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    rest: api\n  };\n}\nrestEndpointMethods.VERSION = VERSION;\nfunction legacyRestEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    ...api,\n    rest: api\n  };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\nexport {\n  legacyRestEndpointMethods,\n  restEndpointMethods\n};\n//# sourceMappingURL=index.js.map\n","const VERSION = \"13.3.0\";\nexport {\n  VERSION\n};\n//# sourceMappingURL=version.js.map\n","const VERSION = \"21.1.0\";\nexport {\n  VERSION\n};\n","import { Octokit as Core } from \"@octokit/core\";\nimport { requestLog } from \"@octokit/plugin-request-log\";\nimport {\n  paginateRest\n} from \"@octokit/plugin-paginate-rest\";\nimport { legacyRestEndpointMethods } from \"@octokit/plugin-rest-endpoint-methods\";\nimport { VERSION } from \"./version.js\";\nconst Octokit = Core.plugin(requestLog, legacyRestEndpointMethods, paginateRest).defaults(\n  {\n    userAgent: `octokit-rest.js/${VERSION}`\n  }\n);\nexport {\n  Octokit\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","outputChannel","vscode","window","createOutputChannel","console","log","registerCodeTrackerWebViewProvider","disposable1","commands","registerCommand","async","showInformationMessage","session","githubAuthenticate","initializeWorkSpaceTracking","error","showErrorMessage","message","subscriptions","push","disposable","authentication","getSession","createIfNone","logContent","WorkSpaceTracker","getInstance","getTrackedChangesAsString","accessToken","pushLogToGitHub","account","label","fileName","Date","toISOString","split","repoOwner","repoName","branch","octokit","Octokit","auth","repoCreated","rest","repos","get","owner","repo","status","createForAuthenticatedUser","name","private","description","auto_init","data","refData","git","getRef","ref","latestCommitSha","object","sha","commitData","getCommit","commit_sha","latestTreeSha","tree","treeData","createTree","base_tree","path","mode","type","content","newCommit","createCommit","parents","updateRef","EventEmitter","static","watcher","ignorePatterns","workSpaceChanges","Map","logChannel","super","this","setupWatcher","instance","appendLine","workspace","getConfiguration","createFileSystemWatcher","onDidCreate","uri","trackChange","onDidChange","onDidDelete","relativePath","asRelativePath","some","pattern","RegExp","test","extension","extname","fsPath","substring","includes","change","time","set","emit","toUpperCase","getTrackedChanges","Array","from","values","clearChanges","clear","updateIgnorePatterns","patterns","join","map","dispose","workspaceFolders","length","folder","provider","CodeTrackerWebViewProvider","extensionUri","registerWebviewViewProvider","_extensionUri","_view","constructor","resolveWebviewView","webviewView","_context","_token","webview","options","enableScripts","localResourceRoots","Uri","joinPath","html","_getHtmlForWebview","onDidReceiveMessage","executeCommand","styleResetUri","asWebviewUri","styleVSCodeUri","cspSource","module","exports","require","NullObject","prototype","Object","create","paramRE","quotedPairRE","mediaTypeRE","defaultContentType","parameters","freeze","header","index","indexOf","slice","trim","result","toLowerCase","key","match","value","lastIndex","exec","replace","getUserAgent","navigator","userAgent","process","undefined","version","substr","platform","arch","register","state","method","Error","isArray","reverse","reduce","callback","bind","Promise","resolve","then","registry","registered","hook","addHook","kind","orig","result_","catch","removeHook","splice","Function","bindable","bindApi","removeHookRef","apply","api","remove","forEach","args","mergeDeep","defaults","assign","keys","toString","call","proto","getPrototypeOf","Ctor","hasOwnProperty","isPlainObject","removeUndefinedProperties","obj","merge","route","url","headers","newObj","mergedOptions","mediaType","previews","filter","preview","concat","urlVariableRegex","removeNonChars","variableName","omit","keysToOmit","__proto__","encodeReserved","str","part","encodeURI","encodeUnreserved","encodeURIComponent","c","charCodeAt","encodeValue","operator","isDefined","isKeyOperator","expand","template","operators","_","expression","literal","charAt","variable","tmp","modifier","parseInt","value2","k","getValues","separator","parse","body","urlVariableNames","matches","a","b","extractUrlVariableNames","baseUrl","remainingParameters","option","accept","format","endsWith","previewsFromAcceptHeader","names","q","addQueryParameters","request","endpointWithDefaults","endpoint","withDefaults","oldDefaults","newDefaults","DEFAULTS2","endpoint2","DEFAULTS","RequestError","response","statusCode","Number","isNaN","requestCopy","authorization","fetchWrapper","requestOptions","fetch","globalThis","parseSuccessResponseBody","JSON","stringify","requestHeaders","fromEntries","entries","String","fetchResponse","redirect","signal","duplex","cause","requestError","responseHeaders","octokitResponse","link","deprecationLink","pop","warn","sunset","statusText","getResponseData","ArrayBuffer","suffix","documentation_url","errors","v","toErrorMessage","contentType","text","mimetype","startsWith","charset","arrayBuffer","err","oldEndpoint","endpointOptions","request2","route2","parameters2","GraphqlResponseError","e","captureStackTrace","NON_VARIABLE_OPTIONS","FORBIDDEN_VARIABLE_OPTIONS","GHES_V3_SUFFIX_REGEX","newRequest","query","reject","parsedOptions","variables","graphql","REGEX_IS_INSTALLATION_LEGACY","REGEX_IS_INSTALLATION","REGEX_IS_USER_TO_SERVER","token","isApp","isInstallation","isUserToServer","tokenType","withAuthorizationPrefix","createTokenAuth","noop","consoleWarn","consoleError","userAgentTrail","requestLog","wrap","debug","start","now","requestId","info","iterator","requestMethod","Symbol","asyncIterator","next","done","normalizedResponse","incompleteResults","incomplete_results","repositorySelection","repository_selection","totalCount","total_count","namespaceKey","normalizePaginatedListResponse","paginate","mapFn","gather","results","iterator2","earlyExit","paginateRest","VERSION","endpointMethodsMap","scope","endpoints","actions","addCustomLabelsToSelfHostedRunnerForOrg","addCustomLabelsToSelfHostedRunnerForRepo","addRepoAccessToSelfHostedRunnerGroupInOrg","addSelectedRepoToOrgSecret","addSelectedRepoToOrgVariable","approveWorkflowRun","cancelWorkflowRun","createEnvironmentVariable","createOrUpdateEnvironmentSecret","createOrUpdateOrgSecret","createOrUpdateRepoSecret","createOrgVariable","createRegistrationTokenForOrg","createRegistrationTokenForRepo","createRemoveTokenForOrg","createRemoveTokenForRepo","createRepoVariable","createWorkflowDispatch","deleteActionsCacheById","deleteActionsCacheByKey","deleteArtifact","deleteEnvironmentSecret","deleteEnvironmentVariable","deleteOrgSecret","deleteOrgVariable","deleteRepoSecret","deleteRepoVariable","deleteSelfHostedRunnerFromOrg","deleteSelfHostedRunnerFromRepo","deleteWorkflowRun","deleteWorkflowRunLogs","disableSelectedRepositoryGithubActionsOrganization","disableWorkflow","downloadArtifact","downloadJobLogsForWorkflowRun","downloadWorkflowRunAttemptLogs","downloadWorkflowRunLogs","enableSelectedRepositoryGithubActionsOrganization","enableWorkflow","forceCancelWorkflowRun","generateRunnerJitconfigForOrg","generateRunnerJitconfigForRepo","getActionsCacheList","getActionsCacheUsage","getActionsCacheUsageByRepoForOrg","getActionsCacheUsageForOrg","getAllowedActionsOrganization","getAllowedActionsRepository","getArtifact","getCustomOidcSubClaimForRepo","getEnvironmentPublicKey","getEnvironmentSecret","getEnvironmentVariable","getGithubActionsDefaultWorkflowPermissionsOrganization","getGithubActionsDefaultWorkflowPermissionsRepository","getGithubActionsPermissionsOrganization","getGithubActionsPermissionsRepository","getJobForWorkflowRun","getOrgPublicKey","getOrgSecret","getOrgVariable","getPendingDeploymentsForRun","getRepoPermissions","renamed","getRepoPublicKey","getRepoSecret","getRepoVariable","getReviewsForRun","getSelfHostedRunnerForOrg","getSelfHostedRunnerForRepo","getWorkflow","getWorkflowAccessToRepository","getWorkflowRun","getWorkflowRunAttempt","getWorkflowRunUsage","getWorkflowUsage","listArtifactsForRepo","listEnvironmentSecrets","listEnvironmentVariables","listJobsForWorkflowRun","listJobsForWorkflowRunAttempt","listLabelsForSelfHostedRunnerForOrg","listLabelsForSelfHostedRunnerForRepo","listOrgSecrets","listOrgVariables","listRepoOrganizationSecrets","listRepoOrganizationVariables","listRepoSecrets","listRepoVariables","listRepoWorkflows","listRunnerApplicationsForOrg","listRunnerApplicationsForRepo","listSelectedReposForOrgSecret","listSelectedReposForOrgVariable","listSelectedRepositoriesEnabledGithubActionsOrganization","listSelfHostedRunnersForOrg","listSelfHostedRunnersForRepo","listWorkflowRunArtifacts","listWorkflowRuns","listWorkflowRunsForRepo","reRunJobForWorkflowRun","reRunWorkflow","reRunWorkflowFailedJobs","removeAllCustomLabelsFromSelfHostedRunnerForOrg","removeAllCustomLabelsFromSelfHostedRunnerForRepo","removeCustomLabelFromSelfHostedRunnerForOrg","removeCustomLabelFromSelfHostedRunnerForRepo","removeSelectedRepoFromOrgSecret","removeSelectedRepoFromOrgVariable","reviewCustomGatesForRun","reviewPendingDeploymentsForRun","setAllowedActionsOrganization","setAllowedActionsRepository","setCustomLabelsForSelfHostedRunnerForOrg","setCustomLabelsForSelfHostedRunnerForRepo","setCustomOidcSubClaimForRepo","setGithubActionsDefaultWorkflowPermissionsOrganization","setGithubActionsDefaultWorkflowPermissionsRepository","setGithubActionsPermissionsOrganization","setGithubActionsPermissionsRepository","setSelectedReposForOrgSecret","setSelectedReposForOrgVariable","setSelectedRepositoriesEnabledGithubActionsOrganization","setWorkflowAccessToRepository","updateEnvironmentVariable","updateOrgVariable","updateRepoVariable","activity","checkRepoIsStarredByAuthenticatedUser","deleteRepoSubscription","deleteThreadSubscription","getFeeds","getRepoSubscription","getThread","getThreadSubscriptionForAuthenticatedUser","listEventsForAuthenticatedUser","listNotificationsForAuthenticatedUser","listOrgEventsForAuthenticatedUser","listPublicEvents","listPublicEventsForRepoNetwork","listPublicEventsForUser","listPublicOrgEvents","listReceivedEventsForUser","listReceivedPublicEventsForUser","listRepoEvents","listRepoNotificationsForAuthenticatedUser","listReposStarredByAuthenticatedUser","listReposStarredByUser","listReposWatchedByUser","listStargazersForRepo","listWatchedReposForAuthenticatedUser","listWatchersForRepo","markNotificationsAsRead","markRepoNotificationsAsRead","markThreadAsDone","markThreadAsRead","setRepoSubscription","setThreadSubscription","starRepoForAuthenticatedUser","unstarRepoForAuthenticatedUser","apps","addRepoToInstallation","addRepoToInstallationForAuthenticatedUser","checkToken","createFromManifest","createInstallationAccessToken","deleteAuthorization","deleteInstallation","deleteToken","getAuthenticated","getBySlug","getInstallation","getOrgInstallation","getRepoInstallation","getSubscriptionPlanForAccount","getSubscriptionPlanForAccountStubbed","getUserInstallation","getWebhookConfigForApp","getWebhookDelivery","listAccountsForPlan","listAccountsForPlanStubbed","listInstallationReposForAuthenticatedUser","listInstallationRequestsForAuthenticatedApp","listInstallations","listInstallationsForAuthenticatedUser","listPlans","listPlansStubbed","listReposAccessibleToInstallation","listSubscriptionsForAuthenticatedUser","listSubscriptionsForAuthenticatedUserStubbed","listWebhookDeliveries","redeliverWebhookDelivery","removeRepoFromInstallation","removeRepoFromInstallationForAuthenticatedUser","resetToken","revokeInstallationAccessToken","scopeToken","suspendInstallation","unsuspendInstallation","updateWebhookConfigForApp","billing","getGithubActionsBillingOrg","getGithubActionsBillingUser","getGithubBillingUsageReportOrg","getGithubPackagesBillingOrg","getGithubPackagesBillingUser","getSharedStorageBillingOrg","getSharedStorageBillingUser","checks","createSuite","getSuite","listAnnotations","listForRef","listForSuite","listSuitesForRef","rerequestRun","rerequestSuite","setSuitesPreferences","update","codeScanning","commitAutofix","createAutofix","createVariantAnalysis","deleteAnalysis","deleteCodeqlDatabase","getAlert","renamedParameters","alert_id","getAnalysis","getAutofix","getCodeqlDatabase","getDefaultSetup","getSarif","getVariantAnalysis","getVariantAnalysisRepoTask","listAlertInstances","listAlertsForOrg","listAlertsForRepo","listAlertsInstances","listCodeqlDatabases","listRecentAnalyses","updateAlert","updateDefaultSetup","uploadSarif","codeSecurity","attachConfiguration","attachEnterpriseConfiguration","createConfiguration","createConfigurationForEnterprise","deleteConfiguration","deleteConfigurationForEnterprise","detachConfiguration","getConfigurationForRepository","getConfigurationsForEnterprise","getConfigurationsForOrg","getDefaultConfigurations","getDefaultConfigurationsForEnterprise","getRepositoriesForConfiguration","getRepositoriesForEnterpriseConfiguration","getSingleConfigurationForEnterprise","setConfigurationAsDefault","setConfigurationAsDefaultForEnterprise","updateConfiguration","updateEnterpriseConfiguration","codesOfConduct","getAllCodesOfConduct","getConductCode","codespaces","addRepositoryForSecretForAuthenticatedUser","checkPermissionsForDevcontainer","codespaceMachinesForAuthenticatedUser","createOrUpdateSecretForAuthenticatedUser","createWithPrForAuthenticatedUser","createWithRepoForAuthenticatedUser","deleteForAuthenticatedUser","deleteFromOrganization","deleteSecretForAuthenticatedUser","exportForAuthenticatedUser","getCodespacesForUserInOrg","getExportDetailsForAuthenticatedUser","getForAuthenticatedUser","getPublicKeyForAuthenticatedUser","getSecretForAuthenticatedUser","listDevcontainersInRepositoryForAuthenticatedUser","listForAuthenticatedUser","listInOrganization","org_id","listInRepositoryForAuthenticatedUser","listRepositoriesForSecretForAuthenticatedUser","listSecretsForAuthenticatedUser","preFlightWithRepoForAuthenticatedUser","publishForAuthenticatedUser","removeRepositoryForSecretForAuthenticatedUser","repoMachinesForAuthenticatedUser","setRepositoriesForSecretForAuthenticatedUser","startForAuthenticatedUser","stopForAuthenticatedUser","stopInOrganization","updateForAuthenticatedUser","copilot","addCopilotSeatsForTeams","addCopilotSeatsForUsers","cancelCopilotSeatAssignmentForTeams","cancelCopilotSeatAssignmentForUsers","copilotMetricsForOrganization","copilotMetricsForTeam","getCopilotOrganizationDetails","getCopilotSeatDetailsForUser","listCopilotSeats","usageMetricsForOrg","usageMetricsForTeam","dependabot","listAlertsForEnterprise","dependencyGraph","createRepositorySnapshot","diffRange","exportSbom","emojis","gists","checkIsStarred","createComment","delete","deleteComment","fork","getComment","getRevision","list","listComments","listCommits","listForUser","listForks","listPublic","listStarred","star","unstar","updateComment","createBlob","createRef","createTag","deleteRef","getBlob","getTag","getTree","listMatchingRefs","gitignore","getAllTemplates","getTemplate","interactions","getRestrictionsForAuthenticatedUser","getRestrictionsForOrg","getRestrictionsForRepo","getRestrictionsForYourPublicRepos","removeRestrictionsForAuthenticatedUser","removeRestrictionsForOrg","removeRestrictionsForRepo","removeRestrictionsForYourPublicRepos","setRestrictionsForAuthenticatedUser","setRestrictionsForOrg","setRestrictionsForRepo","setRestrictionsForYourPublicRepos","issues","addAssignees","addLabels","addSubIssue","checkUserCanBeAssigned","checkUserCanBeAssignedToIssue","createLabel","createMilestone","deleteLabel","deleteMilestone","getEvent","getLabel","getMilestone","listAssignees","listCommentsForRepo","listEvents","listEventsForRepo","listEventsForTimeline","listForOrg","listForRepo","listLabelsForMilestone","listLabelsForRepo","listLabelsOnIssue","listMilestones","listSubIssues","lock","removeAllLabels","removeAssignees","removeLabel","removeSubIssue","reprioritizeSubIssue","setLabels","unlock","updateLabel","updateMilestone","licenses","getAllCommonlyUsed","getForRepo","markdown","render","renderRaw","meta","getAllVersions","getOctocat","getZen","root","migrations","deleteArchiveForAuthenticatedUser","deleteArchiveForOrg","downloadArchiveForOrg","getArchiveForAuthenticatedUser","getStatusForAuthenticatedUser","getStatusForOrg","listReposForAuthenticatedUser","listReposForOrg","listReposForUser","startForOrg","unlockRepoForAuthenticatedUser","unlockRepoForOrg","oidc","getOidcCustomSubTemplateForOrg","updateOidcCustomSubTemplateForOrg","orgs","addSecurityManagerTeam","deprecated","assignTeamToOrgRole","assignUserToOrgRole","blockUser","cancelInvitation","checkBlockedUser","checkMembershipForUser","checkPublicMembershipForUser","convertMemberToOutsideCollaborator","createInvitation","createOrUpdateCustomProperties","createOrUpdateCustomPropertiesValuesForRepos","createOrUpdateCustomProperty","createWebhook","deleteWebhook","enableOrDisableSecurityProductOnAllOrgRepos","getAllCustomProperties","getCustomProperty","getMembershipForAuthenticatedUser","getMembershipForUser","getOrgRole","getWebhook","getWebhookConfigForOrg","listAppInstallations","listAttestations","listBlockedUsers","listCustomPropertiesValuesForRepos","listFailedInvitations","listInvitationTeams","listMembers","listMembershipsForAuthenticatedUser","listOrgRoleTeams","listOrgRoleUsers","listOrgRoles","listOrganizationFineGrainedPermissions","listOutsideCollaborators","listPatGrantRepositories","listPatGrantRequestRepositories","listPatGrantRequests","listPatGrants","listPendingInvitations","listPublicMembers","listSecurityManagerTeams","listWebhooks","pingWebhook","removeCustomProperty","removeMember","removeMembershipForUser","removeOutsideCollaborator","removePublicMembershipForAuthenticatedUser","removeSecurityManagerTeam","reviewPatGrantRequest","reviewPatGrantRequestsInBulk","revokeAllOrgRolesTeam","revokeAllOrgRolesUser","revokeOrgRoleTeam","revokeOrgRoleUser","setMembershipForUser","setPublicMembershipForAuthenticatedUser","unblockUser","updateMembershipForAuthenticatedUser","updatePatAccess","updatePatAccesses","updateWebhook","updateWebhookConfigForOrg","packages","deletePackageForAuthenticatedUser","deletePackageForOrg","deletePackageForUser","deletePackageVersionForAuthenticatedUser","deletePackageVersionForOrg","deletePackageVersionForUser","getAllPackageVersionsForAPackageOwnedByAnOrg","getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser","getAllPackageVersionsForPackageOwnedByAuthenticatedUser","getAllPackageVersionsForPackageOwnedByOrg","getAllPackageVersionsForPackageOwnedByUser","getPackageForAuthenticatedUser","getPackageForOrganization","getPackageForUser","getPackageVersionForAuthenticatedUser","getPackageVersionForOrganization","getPackageVersionForUser","listDockerMigrationConflictingPackagesForAuthenticatedUser","listDockerMigrationConflictingPackagesForOrganization","listDockerMigrationConflictingPackagesForUser","listPackagesForAuthenticatedUser","listPackagesForOrganization","listPackagesForUser","restorePackageForAuthenticatedUser","restorePackageForOrg","restorePackageForUser","restorePackageVersionForAuthenticatedUser","restorePackageVersionForOrg","restorePackageVersionForUser","privateRegistries","createOrgPrivateRegistry","deleteOrgPrivateRegistry","getOrgPrivateRegistry","listOrgPrivateRegistries","updateOrgPrivateRegistry","projects","addCollaborator","createCard","createColumn","createForOrg","createForRepo","deleteCard","deleteColumn","getCard","getColumn","getPermissionForUser","listCards","listCollaborators","listColumns","moveCard","moveColumn","removeCollaborator","updateCard","updateColumn","pulls","checkIfMerged","createReplyForReviewComment","createReview","createReviewComment","deletePendingReview","deleteReviewComment","dismissReview","getReview","getReviewComment","listCommentsForReview","listFiles","listRequestedReviewers","listReviewComments","listReviewCommentsForRepo","listReviews","removeRequestedReviewers","requestReviewers","submitReview","updateBranch","updateReview","updateReviewComment","rateLimit","reactions","createForCommitComment","createForIssue","createForIssueComment","createForPullRequestReviewComment","createForRelease","createForTeamDiscussionCommentInOrg","createForTeamDiscussionInOrg","deleteForCommitComment","deleteForIssue","deleteForIssueComment","deleteForPullRequestComment","deleteForRelease","deleteForTeamDiscussion","deleteForTeamDiscussionComment","listForCommitComment","listForIssue","listForIssueComment","listForPullRequestReviewComment","listForRelease","listForTeamDiscussionCommentInOrg","listForTeamDiscussionInOrg","acceptInvitation","acceptInvitationForAuthenticatedUser","addAppAccessRestrictions","mapToData","addStatusCheckContexts","addTeamAccessRestrictions","addUserAccessRestrictions","cancelPagesDeployment","checkAutomatedSecurityFixes","checkCollaborator","checkPrivateVulnerabilityReporting","checkVulnerabilityAlerts","codeownersErrors","compareCommits","compareCommitsWithBasehead","createAttestation","createAutolink","createCommitComment","createCommitSignatureProtection","createCommitStatus","createDeployKey","createDeployment","createDeploymentBranchPolicy","createDeploymentProtectionRule","createDeploymentStatus","createDispatchEvent","createFork","createInOrg","createOrUpdateCustomPropertiesValues","createOrUpdateEnvironment","createOrUpdateFileContents","createOrgRuleset","createPagesDeployment","createPagesSite","createRelease","createRepoRuleset","createUsingTemplate","declineInvitation","declineInvitationForAuthenticatedUser","deleteAccessRestrictions","deleteAdminBranchProtection","deleteAnEnvironment","deleteAutolink","deleteBranchProtection","deleteCommitComment","deleteCommitSignatureProtection","deleteDeployKey","deleteDeployment","deleteDeploymentBranchPolicy","deleteFile","deleteInvitation","deleteOrgRuleset","deletePagesSite","deletePullRequestReviewProtection","deleteRelease","deleteReleaseAsset","deleteRepoRuleset","disableAutomatedSecurityFixes","disableDeploymentProtectionRule","disablePrivateVulnerabilityReporting","disableVulnerabilityAlerts","downloadArchive","downloadTarballArchive","downloadZipballArchive","enableAutomatedSecurityFixes","enablePrivateVulnerabilityReporting","enableVulnerabilityAlerts","generateReleaseNotes","getAccessRestrictions","getAdminBranchProtection","getAllDeploymentProtectionRules","getAllEnvironments","getAllStatusCheckContexts","getAllTopics","getAppsWithAccessToProtectedBranch","getAutolink","getBranch","getBranchProtection","getBranchRules","getClones","getCodeFrequencyStats","getCollaboratorPermissionLevel","getCombinedStatusForRef","getCommitActivityStats","getCommitComment","getCommitSignatureProtection","getCommunityProfileMetrics","getContent","getContributorsStats","getCustomDeploymentProtectionRule","getCustomPropertiesValues","getDeployKey","getDeployment","getDeploymentBranchPolicy","getDeploymentStatus","getEnvironment","getLatestPagesBuild","getLatestRelease","getOrgRuleSuite","getOrgRuleSuites","getOrgRuleset","getOrgRulesets","getPages","getPagesBuild","getPagesDeployment","getPagesHealthCheck","getParticipationStats","getPullRequestReviewProtection","getPunchCardStats","getReadme","getReadmeInDirectory","getRelease","getReleaseAsset","getReleaseByTag","getRepoRuleSuite","getRepoRuleSuites","getRepoRuleset","getRepoRulesets","getStatusChecksProtection","getTeamsWithAccessToProtectedBranch","getTopPaths","getTopReferrers","getUsersWithAccessToProtectedBranch","getViews","getWebhookConfigForRepo","listActivities","listAutolinks","listBranches","listBranchesForHeadCommit","listCommentsForCommit","listCommitCommentsForRepo","listCommitStatusesForRef","listContributors","listCustomDeploymentRuleIntegrations","listDeployKeys","listDeploymentBranchPolicies","listDeploymentStatuses","listDeployments","listInvitations","listInvitationsForAuthenticatedUser","listLanguages","listPagesBuilds","listPullRequestsAssociatedWithCommit","listReleaseAssets","listReleases","listTags","listTeams","mergeUpstream","removeAppAccessRestrictions","removeStatusCheckContexts","removeStatusCheckProtection","removeTeamAccessRestrictions","removeUserAccessRestrictions","renameBranch","replaceAllTopics","requestPagesBuild","setAdminBranchProtection","setAppAccessRestrictions","setStatusCheckContexts","setTeamAccessRestrictions","setUserAccessRestrictions","testPushWebhook","transfer","updateBranchProtection","updateCommitComment","updateDeploymentBranchPolicy","updateInformationAboutPagesSite","updateInvitation","updateOrgRuleset","updatePullRequestReviewProtection","updateRelease","updateReleaseAsset","updateRepoRuleset","updateStatusCheckPotection","updateStatusCheckProtection","updateWebhookConfigForRepo","uploadReleaseAsset","search","code","commits","issuesAndPullRequests","labels","topics","users","secretScanning","createPushProtectionBypass","getScanHistory","listLocationsForAlert","securityAdvisories","createPrivateVulnerabilityReport","createRepositoryAdvisory","createRepositoryAdvisoryCveRequest","getGlobalAdvisory","getRepositoryAdvisory","listGlobalAdvisories","listOrgRepositoryAdvisories","listRepositoryAdvisories","updateRepositoryAdvisory","teams","addOrUpdateMembershipForUserInOrg","addOrUpdateProjectPermissionsInOrg","addOrUpdateRepoPermissionsInOrg","checkPermissionsForProjectInOrg","checkPermissionsForRepoInOrg","createDiscussionCommentInOrg","createDiscussionInOrg","deleteDiscussionCommentInOrg","deleteDiscussionInOrg","deleteInOrg","getByName","getDiscussionCommentInOrg","getDiscussionInOrg","getMembershipForUserInOrg","listChildInOrg","listDiscussionCommentsInOrg","listDiscussionsInOrg","listMembersInOrg","listPendingInvitationsInOrg","listProjectsInOrg","listReposInOrg","removeMembershipForUserInOrg","removeProjectInOrg","removeRepoInOrg","updateDiscussionCommentInOrg","updateDiscussionInOrg","updateInOrg","addEmailForAuthenticated","addEmailForAuthenticatedUser","addSocialAccountForAuthenticatedUser","block","checkBlocked","checkFollowingForUser","checkPersonIsFollowedByAuthenticated","createGpgKeyForAuthenticated","createGpgKeyForAuthenticatedUser","createPublicSshKeyForAuthenticated","createPublicSshKeyForAuthenticatedUser","createSshSigningKeyForAuthenticatedUser","deleteEmailForAuthenticated","deleteEmailForAuthenticatedUser","deleteGpgKeyForAuthenticated","deleteGpgKeyForAuthenticatedUser","deletePublicSshKeyForAuthenticated","deletePublicSshKeyForAuthenticatedUser","deleteSocialAccountForAuthenticatedUser","deleteSshSigningKeyForAuthenticatedUser","follow","getById","getByUsername","getContextForUser","getGpgKeyForAuthenticated","getGpgKeyForAuthenticatedUser","getPublicSshKeyForAuthenticated","getPublicSshKeyForAuthenticatedUser","getSshSigningKeyForAuthenticatedUser","listBlockedByAuthenticated","listBlockedByAuthenticatedUser","listEmailsForAuthenticated","listEmailsForAuthenticatedUser","listFollowedByAuthenticated","listFollowedByAuthenticatedUser","listFollowersForAuthenticatedUser","listFollowersForUser","listFollowingForUser","listGpgKeysForAuthenticated","listGpgKeysForAuthenticatedUser","listGpgKeysForUser","listPublicEmailsForAuthenticated","listPublicEmailsForAuthenticatedUser","listPublicKeysForUser","listPublicSshKeysForAuthenticated","listPublicSshKeysForAuthenticatedUser","listSocialAccountsForAuthenticatedUser","listSocialAccountsForUser","listSshSigningKeysForAuthenticatedUser","listSshSigningKeysForUser","setPrimaryEmailVisibilityForAuthenticated","setPrimaryEmailVisibilityForAuthenticatedUser","unblock","unfollow","updateAuthenticated","methodName","decorations","endpointDefaults","has","handler","getOwnPropertyDescriptor","target","configurable","writable","enumerable","defineProperty","descriptor","cache","deleteProperty","ownKeys","requestWithDefaults","newScope","newMethodName","options2","alias","decorate","legacyRestEndpointMethods","newMethods","Proxy","endpointsToMethods","plugin","newPlugins","currentPlugins","plugins","requestDefaults","customRequest","timeZone","authStrategy","otherOptions","octokitOptions","classConstructor","i","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","prop","r","toStringTag","__webpack_exports__"],"sourceRoot":""}